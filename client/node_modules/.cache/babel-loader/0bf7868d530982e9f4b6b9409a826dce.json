{"ast":null,"code":"import axios from 'axios';\nimport { searchWalletHistory, searchTransactionList } from '../utils/DfuseUtils';\nimport { getEthBalance } from '../utils/Web3Utils';\nconst API_SERVER = process.env.REACT_APP_API_SERVER;\nexport const SUBMIT_INVOICE = 'SUBMIT_INVOICE';\nexport const SUBMIT_INVOICE_SUCCESS = 'SUBMIT_INVOICE_SUCCESS';\nexport const SUBMIT_INVOICE_FAILURE = 'SUBMIT_INVOICE_FAILURE';\nexport const GET_WALLET_HISTORY = 'GET_WALLET_HISTORY';\nexport const GET_WALLET_HISTORY_SUCCESS = 'GET_WALLET_HISTORY_SUCCESS';\nexport const GET_WALLET_HISTORY_FAILURE = 'GET_WALLET_HISTORY_FAILURE';\nexport const GET_PREVIOUS_INVOICES = 'GET_PREVIOUS_INVOICES';\nexport const GET_PREVIOUS_INVOICES_SUCCESS = 'GET_PREVIOUS_INVOICES_SUCCESS';\nexport const GET_PREVIOUS_INVOICES_FAILURE = 'GET_PREVIOUS_INVOICES_FAILURE';\nexport const GET_USER_INFO = 'GET_USER_INFO';\nexport const GET_USER_INFO_SUCCESS = 'GET_USER_INFO_SUCCESS';\nexport const GET_USER_INFO_FAILURE = 'GET_USER_INFO_FAILURE';\nexport const GET_WALLET_ETH_BALANCE = 'GET_WALLET_ETH_BALANCE';\nexport const GET_WALLET_ETH_BALANCE_SUCCESS = 'GET_WALLET_ETH_BALANCE_SUCCESS';\nexport const GET_WALLET_ETH_BALANCE_FAILURE = 'GET_WALLET_ETH_BALANCE_FAILURE';\nexport const GET_TRANSACTION_LIST_STATUS = 'GET_TRANSACTION_LIST_STATUS';\nexport const GET_TRANSACTION_LIST_STATUS_SUCCESS = 'GET_TRANSACTION_LIST_STATUS_SUCCESS';\nexport const GET_TRANSACTION_LIST_STATUS_FAILURE = 'GET_TRANSACTION_LIST_STATUS_FAILURE';\nexport const INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\nexport function submitInvoice(payload) {\n  const request = axios.post(`${API_SERVER}/user/invoice`, payload);\n  return {\n    type: SUBMIT_INVOICE,\n    payload: request\n  };\n}\nexport function submitInvoiceSuccess(payload) {\n  return {\n    type: SUBMIT_INVOICE_SUCCESS,\n    payload: payload\n  };\n}\nexport function submitInvoiceFailure(err) {\n  return {\n    type: SUBMIT_INVOICE_FAILURE,\n    payload: err\n  };\n}\nexport function getWalletHistory(type) {\n  const walletAddress = window.ethereum.selectedAddress;\n  const request = searchWalletHistory(walletAddress, type);\n  return {\n    type: GET_WALLET_HISTORY,\n    payload: request\n  };\n}\nexport function getWalletHistorySuccess(response) {\n  return {\n    type: GET_WALLET_HISTORY_SUCCESS,\n    payload: response\n  };\n}\nexport function getWalletHistoryFailure(err) {\n  return {\n    type: GET_WALLET_HISTORY_FAILURE,\n    payload: err\n  };\n}\nexport function getPreviousInvoices() {\n  const walletAddress = window.ethereum.selectedAddress;\n  const request = axios.get(`${API_SERVER}/user/invoices?address=${walletAddress}`);\n  return {\n    type: GET_PREVIOUS_INVOICES,\n    payload: request\n  };\n}\nexport function getPreviousInvoicesSuccess(response) {\n  return {\n    type: GET_PREVIOUS_INVOICES_SUCCESS,\n    payload: response\n  };\n}\nexport function getPreviousInvoicesFailure(error) {\n  return {\n    type: GET_PREVIOUS_INVOICES_FAILURE,\n    payload: error\n  };\n}\nexport function getUserInfo() {\n  const walletAddress = window.ethereum.selectedAddress;\n  const request = axios.get(`${API_SERVER}/user/info?address=${walletAddress}`);\n  return {\n    type: GET_USER_INFO,\n    payload: request\n  };\n}\nexport function getUserInfoSuccess(response) {\n  return {\n    type: GET_USER_INFO_SUCCESS,\n    payload: response\n  };\n}\nexport function getUserInfoFailure(err) {\n  return {\n    type: GET_USER_INFO_FAILURE,\n    payload: err\n  };\n}\nexport function getWalletEthBalance() {\n  const request = getEthBalance();\n  return {\n    type: GET_WALLET_ETH_BALANCE,\n    payload: request\n  };\n}\nexport function getWalletEthBalanceSuccess(response) {\n  return {\n    type: GET_WALLET_ETH_BALANCE_SUCCESS,\n    payload: response\n  };\n}\nexport function getWalletEthBalanceFailure(err) {\n  return {\n    type: GET_WALLET_ETH_BALANCE_FAILURE,\n    payload: err\n  };\n}\nexport function getTransactionListStatus(txnList) {\n  const request = searchTransactionList(txnList);\n  return {\n    type: GET_TRANSACTION_LIST_STATUS,\n    payload: request\n  };\n}\nexport function getTransactionListStatusSuccess(response) {\n  return {\n    type: GET_TRANSACTION_LIST_STATUS_SUCCESS,\n    payload: response\n  };\n}\nexport function getTransactionListStatusError(err) {\n  return {\n    type: GET_TRANSACTION_LIST_STATUS_FAILURE,\n    payload: err\n  };\n}\nexport function initializeSuccess() {\n  return {\n    type: INITIALIZE_SUCCESS,\n    payload: 'init'\n  };\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/EZ Invoicing/client/src/actions/user.js"],"names":["axios","searchWalletHistory","searchTransactionList","getEthBalance","API_SERVER","process","env","REACT_APP_API_SERVER","SUBMIT_INVOICE","SUBMIT_INVOICE_SUCCESS","SUBMIT_INVOICE_FAILURE","GET_WALLET_HISTORY","GET_WALLET_HISTORY_SUCCESS","GET_WALLET_HISTORY_FAILURE","GET_PREVIOUS_INVOICES","GET_PREVIOUS_INVOICES_SUCCESS","GET_PREVIOUS_INVOICES_FAILURE","GET_USER_INFO","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILURE","GET_WALLET_ETH_BALANCE","GET_WALLET_ETH_BALANCE_SUCCESS","GET_WALLET_ETH_BALANCE_FAILURE","GET_TRANSACTION_LIST_STATUS","GET_TRANSACTION_LIST_STATUS_SUCCESS","GET_TRANSACTION_LIST_STATUS_FAILURE","INITIALIZE_SUCCESS","submitInvoice","payload","request","post","type","submitInvoiceSuccess","submitInvoiceFailure","err","getWalletHistory","walletAddress","window","ethereum","selectedAddress","getWalletHistorySuccess","response","getWalletHistoryFailure","getPreviousInvoices","get","getPreviousInvoicesSuccess","getPreviousInvoicesFailure","error","getUserInfo","getUserInfoSuccess","getUserInfoFailure","getWalletEthBalance","getWalletEthBalanceSuccess","getWalletEthBalanceFailure","getTransactionListStatus","txnList","getTransactionListStatusSuccess","getTransactionListStatusError","initializeSuccess"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { searchWalletHistory, searchTransactionList } from '../utils/DfuseUtils';\nimport { getEthBalance } from '../utils/Web3Utils';\n\nconst API_SERVER = process.env.REACT_APP_API_SERVER;\n\nexport const SUBMIT_INVOICE = 'SUBMIT_INVOICE';\nexport const SUBMIT_INVOICE_SUCCESS = 'SUBMIT_INVOICE_SUCCESS';\nexport const SUBMIT_INVOICE_FAILURE = 'SUBMIT_INVOICE_FAILURE';\n\nexport const GET_WALLET_HISTORY = 'GET_WALLET_HISTORY';\nexport const GET_WALLET_HISTORY_SUCCESS = 'GET_WALLET_HISTORY_SUCCESS';\nexport const GET_WALLET_HISTORY_FAILURE = 'GET_WALLET_HISTORY_FAILURE';\n\nexport const GET_PREVIOUS_INVOICES = 'GET_PREVIOUS_INVOICES';\nexport const GET_PREVIOUS_INVOICES_SUCCESS = 'GET_PREVIOUS_INVOICES_SUCCESS';\nexport const GET_PREVIOUS_INVOICES_FAILURE = 'GET_PREVIOUS_INVOICES_FAILURE';\n\nexport const GET_USER_INFO = 'GET_USER_INFO';\nexport const GET_USER_INFO_SUCCESS = 'GET_USER_INFO_SUCCESS';\nexport const GET_USER_INFO_FAILURE = 'GET_USER_INFO_FAILURE';\n\nexport const GET_WALLET_ETH_BALANCE = 'GET_WALLET_ETH_BALANCE';\nexport const GET_WALLET_ETH_BALANCE_SUCCESS = 'GET_WALLET_ETH_BALANCE_SUCCESS';\nexport const GET_WALLET_ETH_BALANCE_FAILURE = 'GET_WALLET_ETH_BALANCE_FAILURE';\n\nexport const GET_TRANSACTION_LIST_STATUS = 'GET_TRANSACTION_LIST_STATUS';\nexport const GET_TRANSACTION_LIST_STATUS_SUCCESS = 'GET_TRANSACTION_LIST_STATUS_SUCCESS';\nexport const GET_TRANSACTION_LIST_STATUS_FAILURE = 'GET_TRANSACTION_LIST_STATUS_FAILURE';\n\nexport const INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\n\nexport function submitInvoice(payload) {\n  const request = axios.post(`${API_SERVER}/user/invoice`, payload);\n  return {\n    type: SUBMIT_INVOICE,\n    payload: request\n  }\n}\n\nexport function submitInvoiceSuccess(payload) {\n  return {\n    type: SUBMIT_INVOICE_SUCCESS,\n    payload: payload\n  }\n}\n\nexport function submitInvoiceFailure(err) {\n  return {\n    type: SUBMIT_INVOICE_FAILURE,\n    payload: err\n  }\n}\n\nexport function getWalletHistory(type) {\n  const walletAddress = window.ethereum.selectedAddress;\n\n  const request = searchWalletHistory(walletAddress, type);\n  return {\n    type: GET_WALLET_HISTORY,\n    payload: request\n  }\n}\n\nexport function getWalletHistorySuccess(response) {\n  return {\n    type: GET_WALLET_HISTORY_SUCCESS,\n    payload: response\n  }\n}\n\n\nexport function getWalletHistoryFailure(err) {\n  return {\n    type: GET_WALLET_HISTORY_FAILURE,\n    payload: err\n  }\n}\n\nexport function getPreviousInvoices() {\n  const walletAddress = window.ethereum.selectedAddress;\n  const request = axios.get(`${API_SERVER}/user/invoices?address=${walletAddress}`);\n  return {\n    type: GET_PREVIOUS_INVOICES,\n    payload: request\n  }\n}\n\nexport function getPreviousInvoicesSuccess(response) {\n  return {\n    type: GET_PREVIOUS_INVOICES_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getPreviousInvoicesFailure(error) {\n  return {\n    type: GET_PREVIOUS_INVOICES_FAILURE,\n    payload: error\n  }\n}\n\nexport function getUserInfo() {\n  const walletAddress = window.ethereum.selectedAddress;\n  const request = axios.get(`${API_SERVER}/user/info?address=${walletAddress}`);\n  return {\n    type: GET_USER_INFO,\n    payload: request\n  }\n}\n\nexport function getUserInfoSuccess(response) {\n  return {\n    type: GET_USER_INFO_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getUserInfoFailure(err) {\n  return {\n    type: GET_USER_INFO_FAILURE,\n    payload: err\n  }\n}\n\nexport function getWalletEthBalance() {\n  const request = getEthBalance();\n  return {\n    type: GET_WALLET_ETH_BALANCE,\n    payload: request\n  }\n}\n\nexport function getWalletEthBalanceSuccess(response) {\n  return {\n    type: GET_WALLET_ETH_BALANCE_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getWalletEthBalanceFailure(err) {\n  return {\n    type: GET_WALLET_ETH_BALANCE_FAILURE,\n    payload: err\n  }\n}\n\nexport function getTransactionListStatus(txnList) {\n  const request = searchTransactionList(txnList)\n  return {\n    type: GET_TRANSACTION_LIST_STATUS,\n    payload: request\n  }\n}\n\nexport function getTransactionListStatusSuccess(response) {\n  return {\n    type: GET_TRANSACTION_LIST_STATUS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getTransactionListStatusError(err) {\n  return {\n    type: GET_TRANSACTION_LIST_STATUS_FAILURE,\n    payload: err\n  }\n}\n\nexport function initializeSuccess() {\n  return {\n    type: INITIALIZE_SUCCESS,\n    payload: 'init'\n  }\n}"]},"metadata":{},"sourceType":"module"}