{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashs\\\\Desktop\\\\Computer Science\\\\Web Development\\\\Projects\\\\Hackethons\\\\EPIC TVS\\\\Streamworks-master\\\\client\\\\src\\\\components\\\\user\\\\CreateInvoice.js\";\nimport React, { Component, useState } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nvar util = require('web3-utils'); // const [selectedDate, setSelectedDate] = useState(null);\n\n\nexport default class CreateInvoice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitInvoice = () => {\n      const {\n        address,\n        pay,\n        type,\n        hours,\n        label,\n        description,\n        perHour\n      } = this.state;\n      let amount = 0;\n\n      if (perHour) {\n        amount = pay * hours;\n      } else {\n        amount = pay;\n      }\n\n      const sender_address = window.ethereum.selectedAddress;\n      const payload = {\n        sender_address: sender_address.toLowerCase(),\n        recipient_address: address.toLowerCase(),\n        amount: amount,\n        description,\n        label\n      };\n      this.props.submitInvoice(payload);\n      this.props.handleCloseDialog();\n    };\n\n    this.perHourToggle = evt => {\n      this.setState({\n        perHour: evt.target.checked,\n        perProject: !evt.target.checked\n      });\n    };\n\n    this.perProjectToggle = evt => {\n      this.setState({\n        perProject: evt.target.checked,\n        perHour: !evt.target.checked\n      });\n    };\n\n    this.hoursChanged = evt => {\n      this.setState({\n        hours: evt.target.value\n      });\n    };\n\n    this.payChanged = evt => {\n      this.setState({\n        pay: evt.target.value\n      });\n    };\n\n    this.managerAddressChanged = evt => {\n      this.setState({\n        address: evt.target.value\n      });\n    };\n\n    this.labelChanged = evt => {\n      this.setState({\n        label: evt.target.value\n      });\n    };\n\n    this.descriptionChanged = evt => {\n      this.setState({\n        description: evt.target.value\n      });\n    };\n\n    this.dateChanged = evt => {\n      this.setState({\n        selectedDate: evt.target.date\n      });\n    };\n\n    this.state = {\n      address: '',\n      pay: 0,\n      type: '',\n      hours: 0,\n      perHour: true,\n      perProject: false,\n      label: '',\n      description: '',\n      selectedDate: ''\n    };\n  }\n\n  render() {\n    const {\n      dialogVisible,\n      handleCloseDialog\n    } = this.props;\n    const {\n      pay,\n      description,\n      perHour,\n      perProject,\n      hours,\n      address,\n      label,\n      selectedDate\n    } = this.state;\n    let currentPayForm = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n\n    if (perHour) {\n      currentPayForm = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter amount\",\n        value: pay,\n        onChange: this.payChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Enter the amount (Ether)\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter hours\",\n        value: hours,\n        onChange: this.hoursChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Enter the hours\"))));\n    } else {\n      currentPayForm = React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter amount\",\n        value: pay,\n        onChange: this.payChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Enter the amount (Ether)\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: dialogVisible,\n      onHide: handleCloseDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Create a new invoice\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Invoice Number\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter the unique invoice number\",\n      value: label,\n      onChange: this.labelChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Enter the Account number of the Invoice Financing Company\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter wallet address\",\n      value: address,\n      onChange: this.managerAddressChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Enter the public key of your manager's wallet\")), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Customer's Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Who is the customer of the Goods/Services?\",\n      value: label,\n      onChange: this.labelChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Total Amount\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"What is the total amount of Invoice\",\n      value: label,\n      onChange: this.labelChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Label\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"What is the invoice for?\",\n      value: label,\n      onChange: this.labelChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Date as per invoice\"), React.createElement(DatePicker, {\n      selected: selectedDate,\n      onChange: this.dateChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleCloseDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.submitInvoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Create Invoice\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/user/CreateInvoice.js"],"names":["React","Component","useState","Modal","Button","Form","Row","Col","DatePicker","util","require","CreateInvoice","constructor","props","submitInvoice","address","pay","type","hours","label","description","perHour","state","amount","sender_address","window","ethereum","selectedAddress","payload","toLowerCase","recipient_address","handleCloseDialog","perHourToggle","evt","setState","target","checked","perProject","perProjectToggle","hoursChanged","value","payChanged","managerAddressChanged","labelChanged","descriptionChanged","dateChanged","selectedDate","date","render","dialogVisible","currentPayForm"],"mappings":"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","sourcesContent":["import React, { Component , useState} from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nvar util = require('web3-utils');\n// const [selectedDate, setSelectedDate] = useState(null);\nexport default class CreateInvoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '', pay: 0, type: '', hours: 0, perHour: true, perProject: false, label: '', description: '', selectedDate: ''};\n  }\n  submitInvoice = () => {\n    const { address, pay, type, hours, label, description, perHour } = this.state;\n    let amount = 0;\n\n    if (perHour) {\n      amount = pay * hours;\n    }\n    else {\n      amount = pay;\n    }\n\n    const sender_address = window.ethereum.selectedAddress;\n\n    const payload = {\n      sender_address: sender_address.toLowerCase(),\n      recipient_address: address.toLowerCase(),\n      amount: amount,\n      description,\n      label\n    }\n    this.props.submitInvoice(payload);\n    this.props.handleCloseDialog();\n  }\n\n  perHourToggle = (evt) => {\n    this.setState({ perHour: evt.target.checked, perProject: !evt.target.checked })\n  }\n\n  perProjectToggle = (evt) => {\n    this.setState({ perProject: evt.target.checked, perHour: !evt.target.checked });\n  }\n\n  hoursChanged = (evt) => {\n    this.setState({ hours: evt.target.value });\n  }\n\n  payChanged = (evt) => {\n    this.setState({ pay: evt.target.value });\n  }\n\n  managerAddressChanged = (evt) => {\n    this.setState({ address: evt.target.value });\n  }\n\n  labelChanged = (evt) => {\n    this.setState({ label: evt.target.value });\n  }\n\n  descriptionChanged = (evt) => {\n    this.setState({ description: evt.target.value });\n  }\n  dateChanged = (evt) => {\n    this.setState({selectedDate : evt.target.date});\n  }\n\n  render() {\n\n    const { dialogVisible, handleCloseDialog, } = this.props;\n    const { pay, description, perHour, perProject, hours, address, label, selectedDate} = this.state;\n\n\n    let currentPayForm = <span/>;\n    if (perHour) {\n      currentPayForm =\n        <div>\n        <Form.Row>\n          <Col>\n                <Form.Control type=\"text\" placeholder=\"Enter amount\" value={pay} onChange={this.payChanged}/>\n                <Form.Text className=\"text-muted\">\n                    Enter the amount (Ether)\n                </Form.Text>\n           </Col> \n         <Col>\n                <Form.Control type=\"text\" placeholder=\"Enter hours\" value={hours} onChange={this.hoursChanged}/>\n                <Form.Text className=\"text-muted\">\n                    Enter the hours\n                </Form.Text>\n          </Col>     \n        </Form.Row>\n    </div>\n    }\n    else {\n      currentPayForm = <Form.Group>\n          <Form.Control type=\"text\" placeholder=\"Enter amount\" value={pay} onChange={this.payChanged}/>\n          <Form.Text className=\"text-muted\">\n              Enter the amount (Ether)\n          </Form.Text>\n      </Form.Group>\n    }\n    return (\n      <div>\n      <Modal show={dialogVisible} onHide={handleCloseDialog}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create a new invoice</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        \n<Form>\n<Form.Group controlId=\"description\">\n   <Form.Label>Invoice Number</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter the unique invoice number\" value={label} onChange={this.labelChanged}/>\n\n  </Form.Group> \n\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Enter the Account number of the Invoice Financing Company</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Enter wallet address\" value={address} onChange={this.managerAddressChanged}/>\n    <Form.Text className=\"text-muted\" >\n      Enter the public key of your manager's wallet\n    </Form.Text>\n  </Form.Group>\n\n\n  <Form.Group controlId=\"description\">\n   <Form.Label>Customer's Name</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"Who is the customer of the Goods/Services?\" value={label} onChange={this.labelChanged}/>\n\n  </Form.Group> \n  <Form.Group controlId=\"description\">\n   <Form.Label>Total Amount</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"What is the total amount of Invoice\" value={label} onChange={this.labelChanged}/>\n\n  </Form.Group> \n    \n  <Form.Group controlId=\"description\">\n   <Form.Label>Label</Form.Label>\n    <Form.Control type=\"text\" placeholder=\"What is the invoice for?\" value={label} onChange={this.labelChanged}/>\n\n  </Form.Group>  \n  <Form.Group controlId=\"description\">\n   <Form.Label>Date as per invoice</Form.Label>\n      <DatePicker selected={selectedDate} onChange={this.dateChanged}/>\n  </Form.Group>  \n  \n     {/* <Form.Group controlId=\"formBasicEmail\">   \n      <Form.Check  inline\n        type={\"radio\"}\n        id={`default-`}\n        label={`Per Hour`}\n        name=\"projectType\"\n        checked={perHour}\n        onChange={this.perHourToggle}\n      />\n        <Form.Check  inline\n        type={\"radio\"}\n        id={`default-`}\n        label={`Per Project`}\n        checked={perProject}\n        onChange={this.perProjectToggle}\n      />\n      </Form.Group> */}\n      {/* {currentPayForm} */}\n  {/* <Form.Group controlId=\"description\">\n    <Form.Label>Description/Comments</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" value={description} onChange={this.descriptionChanged}/>\n  </Form.Group>    */}\n  </Form>\n        \n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseDialog}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={this.submitInvoice}>\n            Create Invoice\n          </Button>\n        </Modal.Footer>\n      </Modal>      \n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}