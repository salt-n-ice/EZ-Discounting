{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashs\\\\Desktop\\\\Computer Science\\\\Web Development\\\\Projects\\\\Hackethons\\\\EPIC TVS\\\\Streamworks-master\\\\client\\\\src\\\\components\\\\user\\\\ShowInvoice.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './user.scss';\nexport default class CreateInvoice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      sender: '',\n      receiver: ''\n    };\n  }\n\n  payInvoice(transaction) {\n    transaction.sender_address = this.state.sender;\n    transaction.recipient_address = this.state.receiver;\n    this.props.payInvoice(transaction, transaction.amount);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sender: nextProps.data.recipient_address,\n      receiver: nextProps.data.sender_address\n    });\n  }\n\n  render() {\n    const {\n      dialogVisible,\n      handleCloseDialog,\n      data,\n      dataItem,\n      toggle\n    } = this.props;\n    let actionButtonReceived, actionButtonPayed;\n\n    if (toggle == 'paid') {\n      if (data.status2 == 'paid') {\n        actionButtonPayed = React.createElement(\"a\", {\n          href: `${ETHQ_ENDPOINT}/tx/${data.transaction_hash2}`,\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn btn-secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Reciept\"));\n      } else {\n        actionButtonPayed = React.createElement(Button, {\n          className: \"btn btn-secondary\",\n          onClick: () => this.payInvoice(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Pay\");\n      }\n    }\n\n    if (data.status == 'paid') {\n      actionButtonReceived = React.createElement(\"a\", {\n        href: `${ETHQ_ENDPOINT}/tx/${data.transaction_hash}`,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Reciept\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: dialogVisible,\n      onHide: handleCloseDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Invoice Submitted\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Invoice Number\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter the unique invoice number\",\n      value: data.invoiceNumber,\n      onChange: this.invoiceNumberChanged,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Account number of the Invoice Financing Company\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter wallet address\",\n      value: data.recipient_address,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Discount provided by the company\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"0\",\n      value: data.discount,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Customer's Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Who is the customer of the Goods/Services?\",\n      value: data.customerName,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Date as per invoice\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: new Date(data.selectedInvoiceDate).toDateString(),\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Items Listed in the invoice\"), React.createElement(\"div\", {\n      class: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Item Name\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Quantity\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Price per item\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, dataItem.map(x => React.createElement(\"div\", {\n      class: \"container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, x.itemName), React.createElement(\"div\", {\n      className: \"col-sm list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, x.itemQuantity), React.createElement(\"div\", {\n      className: \"col-sm list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, x.itemPrice)))))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Total Amount\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"What is the total amount of Invoice\",\n      value: data.amount,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Date within which funds are needed\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: new Date(data.selectedFinanceDate).toDateString(),\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Label\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Discription\",\n      value: data.label,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, actionButtonPayed, actionButtonReceived, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleCloseDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/user/ShowInvoice.js"],"names":["React","Component","Modal","Button","Form","Row","Col","DatePicker","CreateInvoice","constructor","props","state","items","sender","receiver","payInvoice","transaction","sender_address","recipient_address","amount","componentWillReceiveProps","nextProps","setState","data","render","dialogVisible","handleCloseDialog","dataItem","toggle","actionButtonReceived","actionButtonPayed","status2","ETHQ_ENDPOINT","transaction_hash2","status","transaction_hash","invoiceNumber","invoiceNumberChanged","discount","customerName","Date","selectedInvoiceDate","toDateString","map","x","itemName","itemQuantity","itemPrice","selectedFinanceDate","label"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './user.scss';\r\nexport default class CreateInvoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {items: [], sender: '', receiver: ''};\r\n      }\r\n      payInvoice(transaction) {\r\n        transaction.sender_address = this.state.sender;\r\n        transaction.recipient_address = this.state.receiver;\r\n        this.props.payInvoice(transaction, transaction.amount);\r\n      }\r\n      componentWillReceiveProps(nextProps) {\r\n        this.setState({sender: nextProps.data.recipient_address, receiver: nextProps.data.sender_address})\r\n      }\r\n\r\n  render() {\r\n    const { dialogVisible, handleCloseDialog, data, dataItem, toggle} = this.props;\r\n    let actionButtonReceived, actionButtonPayed;\r\n    if(toggle=='paid'){\r\n      if(data.status2=='paid'){\r\n        actionButtonPayed = \r\n          <a href={`${ETHQ_ENDPOINT}/tx/${data.transaction_hash2}`} target=\"_blank\">\r\n          <Button className=\"btn btn-secondary\">Reciept</Button>\r\n          </a>\r\n      }\r\n      else{\r\n        actionButtonPayed = <Button className=\"btn btn-secondary\" onClick={() => this.payInvoice(data)}>Pay</Button>\r\n      }\r\n    }\r\n    if(data.status=='paid'){\r\n      actionButtonReceived = \r\n      <a href={`${ETHQ_ENDPOINT}/tx/${data.transaction_hash}`} target=\"_blank\">\r\n          <Button className=\"btn btn-secondary\">Reciept</Button>\r\n      </a>\r\n    }\r\n    return (\r\n      <div>\r\n      <Modal show={dialogVisible} onHide={handleCloseDialog}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Invoice Submitted</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        \r\n<Form>\r\n{/* <div class=\"alert alert-danger\" role=\"alert\">\r\n  Alert! You have already submitted an invoice discounting request with the same invoice number!\r\n</div> */}\r\n<Form.Group controlId=\"description\">\r\n   <Form.Label>Invoice Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter the unique invoice number\" value={data.invoiceNumber} onChange={this.invoiceNumberChanged} disabled/>\r\n\r\n  </Form.Group> \r\n\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Account number of the Invoice Financing Company</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter wallet address\" value={data.recipient_address} disabled/>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Discount provided by the company</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"0\" value={data.discount} disabled/>\r\n  </Form.Group> \r\n\r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Customer's Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Who is the customer of the Goods/Services?\" value={data.customerName} disabled/>\r\n\r\n    <Form.Group controlId=\"description\">\r\n   <Form.Label>Date as per invoice</Form.Label>\r\n      <Form.Control type=\"text\" value={new Date(data.selectedInvoiceDate).toDateString()} disabled/>\r\n  </Form.Group>  \r\n\r\n  </Form.Group> \r\n    \r\n  <Form.Group controlId=\"description\">\r\n        <Form.Label>Items Listed in the invoice</Form.Label>\r\n        <div class=\"input-group mb-3\">\r\n          <Form.Control type=\"text\" placeholder=\"Item Name\" disabled/>\r\n          <Form.Control type=\"text\" placeholder=\"Quantity\" disabled/>\r\n          <Form.Control type=\"text\" placeholder=\"Price per item\" disabled/>\r\n          <div class=\"input-group-append\">\r\n          </div>\r\n        </div>\r\n        <ul class=\"list-group\">\r\n        {dataItem.map(x => (\r\n        <div class=\"container \">\r\n        <div class=\"row\">\r\n          <div className=\"col-sm list-group-item\">\r\n            {x.itemName}\r\n          </div>\r\n          <div className=\"col-sm list-group-item\">\r\n            {x.itemQuantity}\r\n          </div>\r\n          <div className=\"col-sm list-group-item\">\r\n            {x.itemPrice}\r\n          </div>\r\n        </div>\r\n      </div>\r\n))}\r\n          {/* <li class=\"list-group-item\">Jello</li> */}\r\n        </ul>\r\n  </Form.Group>  \r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Total Amount</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"What is the total amount of Invoice\" value={data.amount} disabled/>\r\n  </Form.Group> \r\n\r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Date within which funds are needed</Form.Label>\r\n      <Form.Control type=\"text\" value={new Date(data.selectedFinanceDate).toDateString()} disabled/>\r\n  </Form.Group>  \r\n\r\n  <Form.Group controlId=\"description\">\r\n  <Form.Label>Label</Form.Label>\r\n  <Form.Control type=\"text\" placeholder=\"Discription\" value={data.label} disabled/>\r\n  </Form.Group>\r\n  \r\n     {/* <Form.Group controlId=\"formBasicEmail\">   \r\n      <Form.Check  inline\r\n        type={\"radio\"}\r\n        id={`default-`}\r\n        label={`Per Hour`}\r\n        name=\"projectType\"\r\n        checked={perHour}\r\n        onChange={this.perHourToggle}\r\n      />\r\n        <Form.Check  inline\r\n        type={\"radio\"}\r\n        id={`default-`}\r\n        label={`Per Project`}\r\n        checked={perProject}\r\n        onChange={this.perProjectToggle}\r\n      />\r\n      </Form.Group> */}\r\n      {/* {currentPayForm} */}\r\n  {/* <Form.Group controlId=\"description\">\r\n    <Form.Label>Description/Comments</Form.Label>\r\n    <Form.Control as=\"textarea\" rows=\"3\" value={description} onChange={this.descriptionChanged}/>\r\n  </Form.Group>    */}\r\n  </Form>\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {actionButtonPayed}\r\n          {actionButtonReceived}\r\n          <Button variant=\"secondary\" onClick={handleCloseDialog}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}