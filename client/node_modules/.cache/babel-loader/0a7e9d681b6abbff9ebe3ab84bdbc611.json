{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport promise from 'redux-promise';\nimport index from '../reducers';\nexport default function configureStore(initialState) {\n  const finalCreateStore = compose(applyMiddleware(promise), window.devToolsExtension ? window.devToolsExtension() : f => f)(createStore);\n  const store = finalCreateStore(index, initialState);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers');\n\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/store/configureStore.dev.js"],"names":["createStore","applyMiddleware","compose","promise","index","configureStore","initialState","finalCreateStore","window","devToolsExtension","f","store","module","hot","accept","nextReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAMC,gBAAgB,GAAGL,OAAO,CAC9BD,eAAe,CAACE,OAAD,CADe,EAE9BK,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwDC,CAAC,IAAIA,CAF/B,CAAP,CAGvBV,WAHuB,CAAzB;AAKA,QAAMW,KAAK,GAAGJ,gBAAgB,CAACH,KAAD,EAAQE,YAAR,CAA9B;;AAEA,MAAIM,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,MAAM;AACrC,YAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AACAL,MAAAA,KAAK,CAACM,cAAN,CAAqBF,WAArB;AACD,KAHD;AAID;;AAED,SAAOJ,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport promise from 'redux-promise';\nimport index from '../reducers';\n\n\nexport default function configureStore(initialState) {\n  const finalCreateStore = compose(\n    applyMiddleware(promise),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )(createStore);\n\n  const store = finalCreateStore(index, initialState);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}