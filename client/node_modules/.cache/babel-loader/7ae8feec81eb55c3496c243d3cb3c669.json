{"ast":null,"code":"import { PAY_INVOICE, PAY_INVOICE_SUCCESS, PAY_INVOICE_FAILURE, CHECK_INVOICE, GET_PENDING_TRANSACTION_STATUS, GET_PENDING_TRANSACTION_STATUS_SUCCESS, GET_PENDING_TRANSACTION_STATUS_FAILURE } from '../actions/transaction';\nconst initialState = {\n  invoices: [],\n  pendingTransactionID: '',\n  pendingTransactionStatus: [],\n  isFetching: false,\n  error: false,\n  success: false\n};\nexport default function managerReducer(state = initialState, action) {\n  switch (action.type) {\n    case PAY_INVOICE:\n      return { ...state\n      };\n\n    case PAY_INVOICE_SUCCESS:\n      return { ...state,\n        pendingTransactionID: action.payload,\n        pendingTransactionStatus: []\n      };\n\n    case GET_PENDING_TRANSACTION_STATUS_SUCCESS:\n      let currentPendingTxn = state.pendingTransactionStatus;\n      currentPendingTxn.push(action.payload);\n      return { ...state,\n        pendingTransactionStatus: currentPendingTxn\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/EZ-Discounting/client/src/reducers/transaction.js"],"names":["PAY_INVOICE","PAY_INVOICE_SUCCESS","PAY_INVOICE_FAILURE","CHECK_INVOICE","GET_PENDING_TRANSACTION_STATUS","GET_PENDING_TRANSACTION_STATUS_SUCCESS","GET_PENDING_TRANSACTION_STATUS_FAILURE","initialState","invoices","pendingTransactionID","pendingTransactionStatus","isFetching","error","success","managerReducer","state","action","type","payload","currentPendingTxn","push"],"mappings":"AAAA,SACEA,WADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,aAJF,EAKEC,8BALF,EAMEC,sCANF,EAOEC,sCAPF,QASK,wBATL;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,oBAAoB,EAAE,EAFH;AAGnBC,EAAAA,wBAAwB,EAAE,EAHP;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,KAAK,EAAE,KALY;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;AASA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGR,YAAhC,EAA8CS,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,WAAL;AACE,aAAO,EAAE,GAAGe;AAAL,OAAP;;AACF,SAAKd,mBAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYN,QAAAA,oBAAoB,EAAEO,MAAM,CAACE,OAAzC;AAAkDR,QAAAA,wBAAwB,EAAE;AAA5E,OAAP;;AACF,SAAKL,sCAAL;AACE,UAAIc,iBAAiB,GAAGJ,KAAK,CAACL,wBAA9B;AACAS,MAAAA,iBAAiB,CAACC,IAAlB,CAAuBJ,MAAM,CAACE,OAA9B;AACA,aAAO,EAAE,GAAGH,KAAL;AAAYL,QAAAA,wBAAwB,EAAES;AAAtC,OAAP;;AACF;AACE,aAAOJ,KAAP;AAVJ;AAYD","sourcesContent":["import {\n  PAY_INVOICE,\n  PAY_INVOICE_SUCCESS,\n  PAY_INVOICE_FAILURE,\n  CHECK_INVOICE,\n  GET_PENDING_TRANSACTION_STATUS,\n  GET_PENDING_TRANSACTION_STATUS_SUCCESS,\n  GET_PENDING_TRANSACTION_STATUS_FAILURE\n}\nfrom '../actions/transaction';\n\nconst initialState = {\n  invoices: [],\n  pendingTransactionID: '',\n  pendingTransactionStatus: [],\n  isFetching: false,\n  error: false,\n  success: false,\n}\n\nexport default function managerReducer(state = initialState, action) {\n  switch (action.type) {\n    case PAY_INVOICE:\n      return { ...state }\n    case PAY_INVOICE_SUCCESS:\n      return { ...state, pendingTransactionID: action.payload, pendingTransactionStatus: [] };\n    case GET_PENDING_TRANSACTION_STATUS_SUCCESS:\n      let currentPendingTxn = state.pendingTransactionStatus;\n      currentPendingTxn.push(action.payload);\n      return { ...state, pendingTransactionStatus: currentPendingTxn };\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}