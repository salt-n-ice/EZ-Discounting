{"ast":null,"code":"import UserView from './UserView';\nimport { submitInvoice, submitInvoiceSuccess, submitInvoiceFailure, getPreviousInvoices, getPreviousInvoicesSuccess, getPreviousInvoicesFailure, getTransactionListStatus, getTransactionListStatusSuccess, getTransactionListStatusError, initializeSuccess } from '../../actions/user';\nimport { payInvoice, payInvoiceSuccess, payInvoiceFailure, updateInvoice, updateInvoice2, updateInvoiceSuccess, updateInvoiceFailure } from '../../actions/transaction';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitInvoice: payload => {\n      dispatch(submitInvoice(payload)).then(function (response) {\n        if (response.payload.status === 200) {\n          dispatch(submitInvoiceSuccess(response.payload.data));\n        }\n      }).catch(function (err) {\n        dispatch(submitInvoiceFailure(err));\n      });\n    },\n    getPreviousInvoices: () => {\n      dispatch(getPreviousInvoices()).then(function (response) {\n        const previousInvoiceList = response.payload.data;\n        dispatch(getPreviousInvoicesSuccess(previousInvoiceList));\n      }).catch(function (err) {\n        dispatch(getPreviousInvoicesFailure(err));\n      });\n    },\n    initializeSuccess: () => {\n      dispatch(initializeSuccess());\n    },\n    payInvoice: (transaction, amount) => {\n      dispatch(payInvoice(transaction, amount)).then(function (response) {\n        dispatch(payInvoiceSuccess(response.payload));\n        const updateInvoicePayload = {\n          'id': transaction._id,\n          'status2': 'paid',\n          'transaction_hash2': response.payload\n        };\n        dispatch(updateInvoice2(updateInvoicePayload)).then(function (updateInvoiceResponse) {\n          dispatch(updateInvoiceSuccess(updateInvoiceResponse.payload));\n        }).catch(function (err) {\n          dispatch(updateInvoiceFailure(err));\n        });\n      }).catch(function (err) {\n        dispatch(payInvoiceFailure(err));\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserView);","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/EZ Invoicing/client/src/components/user/UserViewContainer.js"],"names":["UserView","submitInvoice","submitInvoiceSuccess","submitInvoiceFailure","getPreviousInvoices","getPreviousInvoicesSuccess","getPreviousInvoicesFailure","getTransactionListStatus","getTransactionListStatusSuccess","getTransactionListStatusError","initializeSuccess","payInvoice","payInvoiceSuccess","payInvoiceFailure","updateInvoice","updateInvoice2","updateInvoiceSuccess","updateInvoiceFailure","connect","mapStateToProps","state","user","mapDispatchToProps","dispatch","payload","then","response","status","data","catch","err","previousInvoiceList","transaction","amount","updateInvoicePayload","_id","updateInvoiceResponse"],"mappings":"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","sourcesContent":["import UserView from './UserView';\nimport {\n  submitInvoice,\n  submitInvoiceSuccess,\n  submitInvoiceFailure,\n  getPreviousInvoices,\n  getPreviousInvoicesSuccess,\n  getPreviousInvoicesFailure,\n  getTransactionListStatus,\n  getTransactionListStatusSuccess,\n  getTransactionListStatusError,\n  initializeSuccess\n}\nfrom '../../actions/user';\nimport {\n  payInvoice,\n  payInvoiceSuccess,\n  payInvoiceFailure,\n  updateInvoice,\n  updateInvoice2,\n  updateInvoiceSuccess,\n  updateInvoiceFailure\n}\nfrom '../../actions/transaction'\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitInvoice: (payload) => {\n      dispatch(submitInvoice(payload)).then(function(response) {\n        if (response.payload.status === 200) {\n          dispatch(submitInvoiceSuccess(response.payload.data));\n        }\n      }).catch(function(err) {\n        dispatch(submitInvoiceFailure(err));\n      })\n    },\n\n    getPreviousInvoices: () => {\n      dispatch(getPreviousInvoices()).then(function(response) {\n        const previousInvoiceList = response.payload.data;\n\n\n        dispatch(getPreviousInvoicesSuccess(previousInvoiceList));\n      }).catch(function(err) {\n        dispatch(getPreviousInvoicesFailure(err));\n      })\n    },\n    initializeSuccess: () => {\n      dispatch(initializeSuccess());\n    },\n\n    payInvoice: (transaction, amount) => {\n      dispatch(payInvoice(transaction, amount)).then(function(response) {\n        dispatch(payInvoiceSuccess(response.payload));\n        const updateInvoicePayload = {\n          'id': transaction._id,\n          'status2': 'paid',\n          'transaction_hash2': response.payload\n        };\n        dispatch(updateInvoice2(updateInvoicePayload)).then(function(updateInvoiceResponse) {\n          dispatch(updateInvoiceSuccess(updateInvoiceResponse.payload));\n        }).catch(function(err) {\n          dispatch(updateInvoiceFailure(err));\n        })\n\n      }).catch(function(err) {\n        dispatch(payInvoiceFailure(err));\n      })\n\n    }\n\n    \n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserView);\n"]},"metadata":{},"sourceType":"module"}