{"ast":null,"code":"import UserView from './UserView';\nimport { submitInvoice, submitInvoiceSuccess, submitInvoiceFailure, getPreviousInvoices, getPreviousInvoicesSuccess, getPreviousInvoicesFailure, getTransactionListStatus, getTransactionListStatusSuccess, getTransactionListStatusError } from '../../actions/user';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitInvoice: payload => {\n      dispatch(submitInvoice(payload)).then(function (response) {\n        if (response.payload.status === 200) {\n          dispatch(submitInvoiceSuccess(response.payload.data));\n        }\n      }).catch(function (err) {\n        dispatch(submitInvoiceFailure(err));\n      });\n    },\n    getPreviousInvoices: () => {\n      dispatch(getPreviousInvoices()).then(function (response) {\n        const previousInvoiceList = response.payload.data;\n        dispatch(getPreviousInvoicesSuccess(previousInvoiceList));\n      }).catch(function (err) {\n        dispatch(getPreviousInvoicesFailure(err));\n      });\n    },\n    initializeSuccess: () => {\n      dispatch(initializeSuccess());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserView);","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/user/UserViewContainer.js"],"names":["UserView","submitInvoice","submitInvoiceSuccess","submitInvoiceFailure","getPreviousInvoices","getPreviousInvoicesSuccess","getPreviousInvoicesFailure","getTransactionListStatus","getTransactionListStatusSuccess","getTransactionListStatusError","connect","mapStateToProps","state","user","mapDispatchToProps","dispatch","payload","then","response","status","data","catch","err","previousInvoiceList","initializeSuccess"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SACEC,aADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,mBAJF,EAKEC,0BALF,EAMEC,0BANF,EAOEC,wBAPF,EAQEC,+BARF,EASEC,6BATF,QAWK,oBAXL;AAYA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,aAAa,EAAGe,OAAD,IAAa;AAC1BD,MAAAA,QAAQ,CAACd,aAAa,CAACe,OAAD,CAAd,CAAR,CAAiCC,IAAjC,CAAsC,UAASC,QAAT,EAAmB;AACvD,YAAIA,QAAQ,CAACF,OAAT,CAAiBG,MAAjB,KAA4B,GAAhC,EAAqC;AACnCJ,UAAAA,QAAQ,CAACb,oBAAoB,CAACgB,QAAQ,CAACF,OAAT,CAAiBI,IAAlB,CAArB,CAAR;AACD;AACF,OAJD,EAIGC,KAJH,CAIS,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACZ,oBAAoB,CAACmB,GAAD,CAArB,CAAR;AACD,OAND;AAOD,KATI;AAWLlB,IAAAA,mBAAmB,EAAE,MAAM;AACzBW,MAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR,CAAgCa,IAAhC,CAAqC,UAASC,QAAT,EAAmB;AACtD,cAAMK,mBAAmB,GAAGL,QAAQ,CAACF,OAAT,CAAiBI,IAA7C;AAGAL,QAAAA,QAAQ,CAACV,0BAA0B,CAACkB,mBAAD,CAA3B,CAAR;AACD,OALD,EAKGF,KALH,CAKS,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACT,0BAA0B,CAACgB,GAAD,CAA3B,CAAR;AACD,OAPD;AAQD,KApBI;AAqBLE,IAAAA,iBAAiB,EAAE,MAAM;AACvBT,MAAAA,QAAQ,CAACS,iBAAiB,EAAlB,CAAR;AACD;AAvBI,GAAP;AA0BD,CA3BD;;AA6BA,eAAed,OAAO,CACpBC,eADoB,EAEpBG,kBAFoB,CAAP,CAGbd,QAHa,CAAf","sourcesContent":["import UserView from './UserView';\nimport {\n  submitInvoice,\n  submitInvoiceSuccess,\n  submitInvoiceFailure,\n  getPreviousInvoices,\n  getPreviousInvoicesSuccess,\n  getPreviousInvoicesFailure,\n  getTransactionListStatus,\n  getTransactionListStatusSuccess,\n  getTransactionListStatusError\n}\nfrom '../../actions/user';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitInvoice: (payload) => {\n      dispatch(submitInvoice(payload)).then(function(response) {\n        if (response.payload.status === 200) {\n          dispatch(submitInvoiceSuccess(response.payload.data));\n        }\n      }).catch(function(err) {\n        dispatch(submitInvoiceFailure(err));\n      })\n    },\n\n    getPreviousInvoices: () => {\n      dispatch(getPreviousInvoices()).then(function(response) {\n        const previousInvoiceList = response.payload.data;\n\n\n        dispatch(getPreviousInvoicesSuccess(previousInvoiceList));\n      }).catch(function(err) {\n        dispatch(getPreviousInvoicesFailure(err));\n      })\n    },\n    initializeSuccess: () => {\n      dispatch(initializeSuccess());\n    }\n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserView);\n"]},"metadata":{},"sourceType":"module"}