{"ast":null,"code":"import ManagerView from './ManagerView';\nimport { listInvoices, listInvoicesSuccess, listInvoicesFailure } from '../../actions/manager';\nimport { payInvoice, payInvoiceSuccess, payInvoiceFailure, updateInvoice, updateInvoiceSuccess, updateInvoiceFailure } from '../../actions/transaction';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    manager: state.manager,\n    transaction: state.transaction\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    listInvoices: () => {\n      dispatch(listInvoices()).then(function (response) {\n        if (response.payload.status === 200) {\n          dispatch(listInvoicesSuccess(response.payload.data));\n        }\n      }).catch(function (err) {\n        dispatch(listInvoicesFailure(err));\n      });\n    },\n    payInvoice: transaction => {\n      dispatch(payInvoice(transaction)).then(function (response) {\n        dispatch(payInvoiceSuccess(response.payload));\n        const updateInvoicePayload = {\n          'id': transaction._id,\n          'status': 'paid',\n          'transaction_hash': response.payload\n        };\n        dispatch(updateInvoice(updateInvoicePayload)).then(function (updateInvoiceResponse) {\n          dispatch(updateInvoiceSuccess(updateInvoiceResponse.payload));\n        }).catch(function (err) {\n          dispatch(updateInvoiceFailure(err));\n        });\n      }).catch(function (err) {\n        dispatch(payInvoiceFailure(err));\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerView);","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/manager/ManagerViewContainer.js"],"names":["ManagerView","listInvoices","listInvoicesSuccess","listInvoicesFailure","payInvoice","payInvoiceSuccess","payInvoiceFailure","updateInvoice","updateInvoiceSuccess","updateInvoiceFailure","connect","mapStateToProps","state","user","manager","transaction","mapDispatchToProps","dispatch","then","response","payload","status","data","catch","err","updateInvoicePayload","_id","updateInvoiceResponse"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,EAA4CC,mBAA5C,QAAuE,uBAAvE;AACA,SACEC,UADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,aAJF,EAKEC,oBALF,EAMEC,oBANF,QAQK,2BARL;AAUA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFV;AAGLC,IAAAA,WAAW,EAAEH,KAAK,CAACG;AAHd,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhB,IAAAA,YAAY,EAAE,MAAM;AAClBgB,MAAAA,QAAQ,CAAChB,YAAY,EAAb,CAAR,CAAyBiB,IAAzB,CAA8B,UAASC,QAAT,EAAmB;AAC/C,YAAIA,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,KAA4B,GAAhC,EAAqC;AACnCJ,UAAAA,QAAQ,CAACf,mBAAmB,CAACiB,QAAQ,CAACC,OAAT,CAAiBE,IAAlB,CAApB,CAAR;AACD;AACF,OAJD,EAIGC,KAJH,CAIS,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACd,mBAAmB,CAACqB,GAAD,CAApB,CAAR;AACD,OAND;AAOD,KATI;AAWLpB,IAAAA,UAAU,EAAGW,WAAD,IAAiB;AAC3BE,MAAAA,QAAQ,CAACb,UAAU,CAACW,WAAD,CAAX,CAAR,CAAkCG,IAAlC,CAAuC,UAASC,QAAT,EAAmB;AACxDF,QAAAA,QAAQ,CAACZ,iBAAiB,CAACc,QAAQ,CAACC,OAAV,CAAlB,CAAR;AACA,cAAMK,oBAAoB,GAAG;AAC3B,gBAAMV,WAAW,CAACW,GADS;AAE3B,oBAAU,MAFiB;AAG3B,8BAAoBP,QAAQ,CAACC;AAHF,SAA7B;AAKAH,QAAAA,QAAQ,CAACV,aAAa,CAACkB,oBAAD,CAAd,CAAR,CAA8CP,IAA9C,CAAmD,UAASS,qBAAT,EAAgC;AACjFV,UAAAA,QAAQ,CAACT,oBAAoB,CAACmB,qBAAqB,CAACP,OAAvB,CAArB,CAAR;AACD,SAFD,EAEGG,KAFH,CAES,UAASC,GAAT,EAAc;AACrBP,UAAAA,QAAQ,CAACR,oBAAoB,CAACe,GAAD,CAArB,CAAR;AACD,SAJD;AAMD,OAbD,EAaGD,KAbH,CAaS,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACX,iBAAiB,CAACkB,GAAD,CAAlB,CAAR;AACD,OAfD;AAiBD;AA7BI,GAAP;AAgCD,CAjCD;;AAmCA,eAAed,OAAO,CACpBC,eADoB,EAEpBK,kBAFoB,CAAP,CAGbhB,WAHa,CAAf","sourcesContent":["import ManagerView from './ManagerView';\nimport { listInvoices, listInvoicesSuccess, listInvoicesFailure } from '../../actions/manager';\nimport {\n  payInvoice,\n  payInvoiceSuccess,\n  payInvoiceFailure,\n  updateInvoice,\n  updateInvoiceSuccess,\n  updateInvoiceFailure\n}\nfrom '../../actions/transaction';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    manager: state.manager,\n    transaction: state.transaction\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    listInvoices: () => {\n      dispatch(listInvoices()).then(function(response) {\n        if (response.payload.status === 200) {\n          dispatch(listInvoicesSuccess(response.payload.data));\n        }\n      }).catch(function(err) {\n        dispatch(listInvoicesFailure(err));\n      })\n    },\n\n    payInvoice: (transaction) => {\n      dispatch(payInvoice(transaction)).then(function(response) {\n        dispatch(payInvoiceSuccess(response.payload));\n        const updateInvoicePayload = {\n          'id': transaction._id,\n          'status': 'paid',\n          'transaction_hash': response.payload\n        };\n        dispatch(updateInvoice(updateInvoicePayload)).then(function(updateInvoiceResponse) {\n          dispatch(updateInvoiceSuccess(updateInvoiceResponse.payload));\n        }).catch(function(err) {\n          dispatch(updateInvoiceFailure(err));\n        })\n\n      }).catch(function(err) {\n        dispatch(payInvoiceFailure(err));\n      })\n\n    }\n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManagerView);\n"]},"metadata":{},"sourceType":"module"}