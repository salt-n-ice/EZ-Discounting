{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashs\\\\Desktop\\\\Computer Science\\\\Web Development\\\\Projects\\\\Hackethons\\\\EPIC TVS\\\\Streamworks-master\\\\client\\\\src\\\\components\\\\manager\\\\ManagerView.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, ListGroup, ListGroupItem, Container, Tabs, Tab, Button } from 'react-bootstrap';\nimport InvoicesList from './InvoicesList';\nimport { getTransactionStatus } from '../../utils/DfuseUtils';\nimport TransactionStatus from '../transaction/TransactionStatus';\nimport './manager.scss';\nexport default class ManagerView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.listenForInvoicePayments = () => {\n      const self = this;\n      this.timer = setInterval(function () {\n        self.props.listInvoices();\n      }, 1000);\n    };\n  }\n\n  componentWillMount() {\n    this.props.listInvoices();\n    this.listenForInvoicePayments();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const {\n      manager,\n      transaction\n    } = this.props;\n    let currentTransactionStatus = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n\n    if (transaction.pendingTransactionID && transaction.pendingTransactionID.length > 0) {\n      currentTransactionStatus = React.createElement(TransactionStatus, {\n        transaction_hash: transaction.pendingTransactionID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }\n\n    let invoiceList = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n\n    if (manager.invoices.length > 0) {\n      invoiceList = React.createElement(InvoicesList, {\n        invoices: manager.invoices,\n        payInvoice: this.props.payInvoice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    } else {\n      invoiceList = React.createElement(\"div\", {\n        className: \"empty-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Looks like you haven't recieved any invoices yet.\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, currentTransactionStatus, invoiceList);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/manager/ManagerView.js"],"names":["React","Component","Row","Col","ListGroup","ListGroupItem","Container","Tabs","Tab","Button","InvoicesList","getTransactionStatus","TransactionStatus","ManagerView","listenForInvoicePayments","self","timer","setInterval","props","listInvoices","componentWillMount","componentWillUnmount","clearInterval","render","manager","transaction","currentTransactionStatus","pendingTransactionID","length","invoiceList","invoices","payInvoice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,SAA7C,EAAwDC,IAAxD,EAA8DC,GAA9D,EAAmEC,MAAnE,QAAiF,iBAAjF;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAO,gBAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAOjDa,wBAPiD,GAOtB,MAAM;AAC/B,YAAMC,IAAI,GAAG,IAAb;AACA,WAAKC,KAAL,GAAaC,WAAW,CAAC,YAAW;AAClCF,QAAAA,IAAI,CAACG,KAAL,CAAWC,YAAX;AACD,OAFuB,EAErB,IAFqB,CAAxB;AAGD,KAZgD;AAAA;;AACjDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKF,KAAL,CAAWC,YAAX;AACA,SAAKL,wBAAL;AACD;;AAUDO,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKN,KAAN,CAAb;AACD;;AAGDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA2B,KAAKP,KAAtC;AACA,QAAIQ,wBAAwB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B;;AAEA,QAAID,WAAW,CAACE,oBAAZ,IAAoCF,WAAW,CAACE,oBAAZ,CAAiCC,MAAjC,GAA0C,CAAlF,EAAqF;AACnFF,MAAAA,wBAAwB,GAAG,oBAAC,iBAAD;AAAmB,QAAA,gBAAgB,EAAED,WAAW,CAACE,oBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B;AACD;;AACD,QAAIE,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;;AACA,QAAIL,OAAO,CAACM,QAAR,CAAiBF,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BC,MAAAA,WAAW,GAAG,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEL,OAAO,CAACM,QAAhC;AAA0C,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWa,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACD,KAFD,MAGK;AACHF,MAAAA,WAAW,GAAG;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAd;AACD;;AACD,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,wBADH,EAEGG,WAFH,CADF;AAMD;;AAvCgD","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, ListGroup, ListGroupItem, Container, Tabs, Tab, Button } from 'react-bootstrap';\nimport InvoicesList from './InvoicesList';\nimport { getTransactionStatus } from '../../utils/DfuseUtils';\nimport TransactionStatus from '../transaction/TransactionStatus';\nimport './manager.scss';\n\nexport default class ManagerView extends Component {\n  componentWillMount() {\n    this.props.listInvoices();\n    this.listenForInvoicePayments();\n  }\n\n\n  listenForInvoicePayments = () => {\n    const self = this;\n    this.timer = setInterval(function() {\n      self.props.listInvoices();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n\n  render() {\n    const { manager, transaction } = this.props;\n    let currentTransactionStatus = <span/>;\n\n    if (transaction.pendingTransactionID && transaction.pendingTransactionID.length > 0) {\n      currentTransactionStatus = <TransactionStatus transaction_hash={transaction.pendingTransactionID}/>\n    }\n    let invoiceList = <span/>;\n    if (manager.invoices.length > 0) {\n      invoiceList = <InvoicesList invoices={manager.invoices} payInvoice={this.props.payInvoice}/>\n    }\n    else {\n      invoiceList = <div className=\"empty-list-container\">Looks like you haven't recieved any invoices yet.</div>\n    }\n    return (\n      <Container>\n        {currentTransactionStatus}\n        {invoiceList}\n    </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}