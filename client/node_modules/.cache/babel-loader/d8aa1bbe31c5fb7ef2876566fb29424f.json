{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashs\\\\Desktop\\\\Computer Science\\\\Web Development\\\\Projects\\\\Hackethons\\\\EPIC TVS\\\\Streamworks-master\\\\client\\\\src\\\\components\\\\user\\\\ShowInvoice.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './user.scss';\nexport default class CreateInvoice extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitInvoice = () => {\n      const {\n        address,\n        pay,\n        type,\n        hours,\n        label,\n        description,\n        perHour,\n        selectedInvoiceDate,\n        selectedFinanceDate,\n        invoiceNumber,\n        customerName,\n        amount,\n        items,\n        storeItem\n      } = this.state;\n      const sender_address = window.ethereum.selectedAddress;\n      console.log(\"Sender address is : \" + sender_address);\n      const payload = {\n        sender_address: sender_address.toLowerCase(),\n        recipient_address: address.toLowerCase(),\n        amount: amount,\n        description,\n        label,\n        selectedInvoiceDate,\n        selectedFinanceDate,\n        invoiceNumber,\n        customerName,\n        amount,\n        storeItem\n      };\n      console.log(storeItem);\n      this.props.submitInvoice(payload);\n      this.props.handleCloseDialog();\n    };\n\n    this.addItem = () => {\n      const {\n        items,\n        itemName,\n        itemQuantity,\n        itemPrice,\n        amount\n      } = this.state;\n      items.push({\n        itemName: itemName,\n        itemQuantity: itemQuantity,\n        itemPrice: itemPrice\n      });\n      this.setState({\n        storeItem: JSON.stringify(items)\n      });\n      this.setState({\n        items: items\n      });\n      this.setState({\n        itemName: '',\n        itemQuantity: '',\n        itemPrice: ''\n      });\n      this.setState({\n        amount: amount + parseFloat(itemQuantity) * parseFloat(itemPrice)\n      }); // var li = document.createElement(\"li\");\n      // li.className = 'list-group-item';\n      // li.textContent =itemName;\n      // ul.appendChild(li);\n    };\n\n    this.perHourToggle = evt => {\n      this.setState({\n        perHour: evt.target.checked,\n        perProject: !evt.target.checked\n      });\n    };\n\n    this.perProjectToggle = evt => {\n      this.setState({\n        perProject: evt.target.checked,\n        perHour: !evt.target.checked\n      });\n    };\n\n    this.hoursChanged = evt => {\n      this.setState({\n        hours: evt.target.value\n      });\n    };\n\n    this.payChanged = evt => {\n      this.setState({\n        pay: evt.target.value\n      });\n    };\n\n    this.managerAddressChanged = evt => {\n      this.setState({\n        address: evt.target.value\n      });\n    };\n\n    this.labelChanged = evt => {\n      this.setState({\n        label: evt.target.value\n      });\n    };\n\n    this.descriptionChanged = evt => {\n      this.setState({\n        description: evt.target.value\n      });\n    };\n\n    this.InvoiceDateChanged = date => {\n      this.setState({\n        selectedInvoiceDate: date\n      });\n    };\n\n    this.FinanceDateChanged = date => {\n      this.setState({\n        selectedFinanceDate: date\n      });\n    };\n\n    this.invoiceNumberChanged = evt => {\n      this.setState({\n        invoiceNumber: evt.target.value\n      });\n    };\n\n    this.CustomerNameChanged = evt => {\n      this.setState({\n        customerName: evt.target.value\n      });\n    };\n\n    this.amountChanged = evt => {\n      this.setState({\n        amount: evt.target.value\n      });\n    };\n\n    this.itemNameChanged = evt => {\n      this.setState({\n        itemName: evt.target.value\n      });\n    };\n\n    this.itemQuantityChanged = evt => {\n      this.setState({\n        itemQuantity: evt.target.value\n      });\n    };\n\n    this.itemPriceChanged = evt => {\n      this.setState({\n        itemPrice: evt.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      dialogVisible,\n      handleCloseDialog\n    } = this.props;\n    const {\n      pay,\n      description,\n      perHour,\n      perProject,\n      hours,\n      address,\n      label,\n      selectedInvoiceDate,\n      selectedFinanceDate,\n      invoiceNumber,\n      customerName,\n      amount,\n      itemName,\n      itemQuantity,\n      itemPrice\n    } = this.state;\n    let currentPayForm = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n\n    if (perHour) {\n      currentPayForm = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter amount\",\n        value: pay,\n        onChange: this.payChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Enter the amount (Ether)\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter hours\",\n        value: hours,\n        onChange: this.hoursChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Enter the hours\"))));\n    } else {\n      currentPayForm = React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter amount\",\n        value: pay,\n        onChange: this.payChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Enter the amount (Ether)\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: dialogVisible,\n      onHide: handleCloseDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Submit a new invoice\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"alert alert-danger\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Alert! You have already submitted an invoice discounting request with the same invoice number!\"), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Invoice Number\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter the unique invoice number\",\n      value: invoiceNumber,\n      onChange: this.invoiceNumberChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Enter the Account number of the Invoice Financing Company\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter wallet address\",\n      value: address,\n      onChange: this.managerAddressChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Enter the public key of your manager's wallet\")), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Customer's Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Who is the customer of the Goods/Services?\",\n      value: customerName,\n      onChange: this.CustomerNameChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Date as per invoice\"), React.createElement(DatePicker, {\n      selected: selectedInvoiceDate,\n      onChange: this.InvoiceDateChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Items Listed in the invoice\"), React.createElement(\"div\", {\n      class: \"input-group mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Item Name\",\n      value: itemName,\n      onChange: this.itemNameChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Quantity\",\n      value: itemQuantity,\n      onChange: this.itemQuantityChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Price per item\",\n      value: itemPrice,\n      onChange: this.itemPriceChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.items.map(x => React.createElement(\"div\", {\n      class: \"container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, x.itemName), React.createElement(\"div\", {\n      className: \"col-sm list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, x.itemQuantity), React.createElement(\"div\", {\n      className: \"col-sm list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, x.itemPrice)))))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Total Amount\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"What is the total amount of Invoice\",\n      value: amount,\n      onChange: this.amountChanged,\n      autocomplete: \"off\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Date within which funds are needed\"), React.createElement(DatePicker, {\n      selected: selectedFinanceDate,\n      onChange: this.FinanceDateChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Label\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Discription\",\n      value: label,\n      onChange: this.labelChanged,\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleCloseDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.submitInvoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Submit Invoice\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/user/ShowInvoice.js"],"names":["React","Component","Modal","Button","Form","Row","Col","DatePicker","CreateInvoice","submitInvoice","address","pay","type","hours","label","description","perHour","selectedInvoiceDate","selectedFinanceDate","invoiceNumber","customerName","amount","items","storeItem","state","sender_address","window","ethereum","selectedAddress","console","log","payload","toLowerCase","recipient_address","props","handleCloseDialog","addItem","itemName","itemQuantity","itemPrice","push","setState","JSON","stringify","parseFloat","perHourToggle","evt","target","checked","perProject","perProjectToggle","hoursChanged","value","payChanged","managerAddressChanged","labelChanged","descriptionChanged","InvoiceDateChanged","date","FinanceDateChanged","invoiceNumberChanged","CustomerNameChanged","amountChanged","itemNameChanged","itemQuantityChanged","itemPriceChanged","render","dialogVisible","currentPayForm","map","x"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './user.scss';\r\nexport default class CreateInvoice extends Component {\r\n  submitInvoice = () => {\r\n    const { address, pay, type, hours, label, description, perHour,selectedInvoiceDate, selectedFinanceDate, invoiceNumber, customerName, amount, items, storeItem} = this.state;\r\n\r\n    const sender_address = window.ethereum.selectedAddress;\r\n    console.log(\"Sender address is : \" + sender_address);\r\n\r\n    const payload = {\r\n      sender_address: sender_address.toLowerCase(),\r\n      recipient_address: address.toLowerCase(),\r\n      amount: amount,\r\n      description,\r\n      label,\r\n      selectedInvoiceDate,\r\n      selectedFinanceDate,\r\n      invoiceNumber,\r\n      customerName,\r\n      amount,\r\n      storeItem\r\n    }\r\n    console.log(storeItem);\r\n    this.props.submitInvoice(payload);\r\n    this.props.handleCloseDialog();\r\n  }\r\n\r\n  addItem = () => {\r\n    const {items, itemName, itemQuantity, itemPrice, amount} = this.state;\r\n    items.push({itemName: itemName, itemQuantity: itemQuantity, itemPrice: itemPrice});\r\n    this.setState({storeItem: JSON.stringify(items)});\r\n    this.setState({items: items});\r\n    this.setState({itemName: '', itemQuantity: '', itemPrice: ''});\r\n    this.setState({amount: amount+parseFloat(itemQuantity)*parseFloat(itemPrice)})\r\n    // var li = document.createElement(\"li\");\r\n    // li.className = 'list-group-item';\r\n    // li.textContent =itemName;\r\n    // ul.appendChild(li);\r\n  }\r\n\r\n  perHourToggle = (evt) => {\r\n    this.setState({ perHour: evt.target.checked, perProject: !evt.target.checked })\r\n  }\r\n\r\n  perProjectToggle = (evt) => {\r\n    this.setState({ perProject: evt.target.checked, perHour: !evt.target.checked });\r\n  }\r\n\r\n  hoursChanged = (evt) => {\r\n    this.setState({ hours: evt.target.value });\r\n  }\r\n\r\n  payChanged = (evt) => {\r\n    this.setState({ pay: evt.target.value });\r\n  }\r\n\r\n  managerAddressChanged = (evt) => {\r\n    this.setState({ address: evt.target.value });\r\n  }\r\n\r\n  labelChanged = (evt) => {\r\n    this.setState({ label: evt.target.value });\r\n  }\r\n\r\n  descriptionChanged = (evt) => {\r\n    this.setState({ description: evt.target.value });\r\n  }\r\n  InvoiceDateChanged = (date) => {\r\n    this.setState({selectedInvoiceDate : date});\r\n  }\r\n  FinanceDateChanged = (date) => {\r\n    this.setState({selectedFinanceDate : date});\r\n  }\r\n  invoiceNumberChanged = (evt) => {\r\n    this.setState({invoiceNumber : evt.target.value});\r\n  }\r\n  CustomerNameChanged = (evt) => {\r\n    this.setState({customerName: evt.target.value});\r\n  }\r\n  amountChanged = (evt) => {\r\n    this.setState({amount: evt.target.value});\r\n  }\r\n  itemNameChanged = (evt) => {\r\n    this.setState({itemName: evt.target.value});\r\n  }\r\n  itemQuantityChanged = (evt) => {\r\n    this.setState({itemQuantity: evt.target.value});\r\n  }\r\n  itemPriceChanged = (evt) => {\r\n    this.setState({itemPrice: evt.target.value});\r\n  }\r\n\r\n  render() {\r\n\r\n    const { dialogVisible, handleCloseDialog, } = this.props;\r\n    const { pay, description, perHour, perProject, hours, address, label, selectedInvoiceDate, selectedFinanceDate, invoiceNumber, customerName, amount, itemName, itemQuantity, itemPrice} = this.state;\r\n\r\n\r\n    let currentPayForm = <span/>;\r\n    if (perHour) {\r\n      currentPayForm =\r\n        <div>\r\n        <Form.Row>\r\n          <Col>\r\n                <Form.Control type=\"text\" placeholder=\"Enter amount\" value={pay} onChange={this.payChanged}/>\r\n                <Form.Text className=\"text-muted\">\r\n                    Enter the amount (Ether)\r\n                </Form.Text>\r\n           </Col> \r\n         <Col>\r\n                <Form.Control type=\"text\" placeholder=\"Enter hours\" value={hours} onChange={this.hoursChanged}/>\r\n                <Form.Text className=\"text-muted\">\r\n                    Enter the hours\r\n                </Form.Text>\r\n          </Col>     \r\n        </Form.Row>\r\n    </div>\r\n    }\r\n    else {\r\n      currentPayForm = <Form.Group>\r\n          <Form.Control type=\"text\" placeholder=\"Enter amount\" value={pay} onChange={this.payChanged}/>\r\n          <Form.Text className=\"text-muted\">\r\n              Enter the amount (Ether)\r\n          </Form.Text>\r\n      </Form.Group>\r\n    }\r\n    return (\r\n      <div>\r\n      <Modal show={dialogVisible} onHide={handleCloseDialog}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Submit a new invoice</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        \r\n<Form>\r\n<div class=\"alert alert-danger\" role=\"alert\">\r\n  Alert! You have already submitted an invoice discounting request with the same invoice number!\r\n</div>\r\n<Form.Group controlId=\"description\">\r\n   <Form.Label>Invoice Number</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter the unique invoice number\" value={invoiceNumber} onChange={this.invoiceNumberChanged} autocomplete=\"off\"/>\r\n\r\n  </Form.Group> \r\n\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Enter the Account number of the Invoice Financing Company</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Enter wallet address\" value={address} onChange={this.managerAddressChanged} autocomplete=\"off\"/>\r\n    <Form.Text className=\"text-muted\" >\r\n      Enter the public key of your manager's wallet\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Customer's Name</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Who is the customer of the Goods/Services?\" value={customerName} onChange={this.CustomerNameChanged} autocomplete=\"off\"/>\r\n\r\n    <Form.Group controlId=\"description\">\r\n   <Form.Label>Date as per invoice</Form.Label>\r\n      <DatePicker selected={selectedInvoiceDate} onChange={this.InvoiceDateChanged} autocomplete=\"off\"/>\r\n  </Form.Group>  \r\n\r\n  </Form.Group> \r\n    \r\n  <Form.Group controlId=\"description\">\r\n        <Form.Label>Items Listed in the invoice</Form.Label>\r\n        <div class=\"input-group mb-3\">\r\n          <Form.Control type=\"text\" placeholder=\"Item Name\" value={itemName} onChange={this.itemNameChanged} autocomplete=\"off\"/>\r\n          <Form.Control type=\"text\" placeholder=\"Quantity\" value={itemQuantity} onChange={this.itemQuantityChanged} autocomplete=\"off\"/>\r\n          <Form.Control type=\"text\" placeholder=\"Price per item\" value={itemPrice} onChange={this.itemPriceChanged} autocomplete=\"off\"/>\r\n          <div class=\"input-group-append\">\r\n          <Button variant=\"primary\" onClick={this.addItem}>\r\n            Add\r\n          </Button>\r\n          </div>\r\n        </div>\r\n        <ul class=\"list-group\">\r\n        {this.state.items.map(x => (\r\n        <div class=\"container \">\r\n        <div class=\"row\">\r\n          <div className=\"col-sm list-group-item\">\r\n            {x.itemName}\r\n          </div>\r\n          <div className=\"col-sm list-group-item\">\r\n            {x.itemQuantity}\r\n          </div>\r\n          <div className=\"col-sm list-group-item\">\r\n            {x.itemPrice}\r\n          </div>\r\n        </div>\r\n      </div>\r\n))}\r\n          {/* <li class=\"list-group-item\">Jello</li> */}\r\n        </ul>\r\n  </Form.Group>  \r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Total Amount</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"What is the total amount of Invoice\" value={amount} onChange={this.amountChanged} autocomplete=\"off\" disabled/>\r\n  </Form.Group> \r\n\r\n\r\n  <Form.Group controlId=\"description\">\r\n   <Form.Label>Date within which funds are needed</Form.Label>\r\n      <DatePicker selected={selectedFinanceDate} onChange={this.FinanceDateChanged} autocomplete=\"off\"/>\r\n  </Form.Group>  \r\n\r\n  <Form.Group controlId=\"description\">\r\n  <Form.Label>Label</Form.Label>\r\n  <Form.Control type=\"text\" placeholder=\"Discription\" value={label} onChange={this.labelChanged} autocomplete=\"off\"/>\r\n  </Form.Group>\r\n  \r\n     {/* <Form.Group controlId=\"formBasicEmail\">   \r\n      <Form.Check  inline\r\n        type={\"radio\"}\r\n        id={`default-`}\r\n        label={`Per Hour`}\r\n        name=\"projectType\"\r\n        checked={perHour}\r\n        onChange={this.perHourToggle}\r\n      />\r\n        <Form.Check  inline\r\n        type={\"radio\"}\r\n        id={`default-`}\r\n        label={`Per Project`}\r\n        checked={perProject}\r\n        onChange={this.perProjectToggle}\r\n      />\r\n      </Form.Group> */}\r\n      {/* {currentPayForm} */}\r\n  {/* <Form.Group controlId=\"description\">\r\n    <Form.Label>Description/Comments</Form.Label>\r\n    <Form.Control as=\"textarea\" rows=\"3\" value={description} onChange={this.descriptionChanged}/>\r\n  </Form.Group>    */}\r\n  </Form>\r\n        \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseDialog}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.submitInvoice}>\r\n            Submit Invoice\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}