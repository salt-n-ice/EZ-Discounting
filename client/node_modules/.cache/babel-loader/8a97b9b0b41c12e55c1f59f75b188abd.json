{"ast":null,"code":"import HomeView from './HomeView';\nimport { listInvoices, listInvoicesSuccess, listInvoicesFailure } from '../../actions/manager';\nimport { getWalletHistory, getWalletHistorySuccess, getWalletHistoryFailure, getUserInfo, getUserInfoSuccess, getUserInfoFailure, getWalletEthBalance, getWalletEthBalanceSuccess, getWalletEthBalanceFailure } from '../../actions/user';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    manager: state.manager\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    listInvoices: () => {\n      dispatch(listInvoices()).then(function (response) {\n        if (response.payload.status === 200) {\n          dispatch(listInvoicesSuccess(response.payload.data));\n        }\n      }).catch(function (err) {\n        dispatch(listInvoicesFailure(err));\n      });\n    },\n    getUserInfo: async () => {\n      dispatch(getUserInfo()).then(function (userInfoResponse) {\n        dispatch(getUserInfoSuccess(userInfoResponse.payload.data));\n      }).catch(function (err) {\n        dispatch(getUserInfoFailure(err));\n      });\n    },\n    getWalletHistory: type => {\n      dispatch(getWalletHistory(type)).then(function (response) {\n        let responseData = [];\n\n        if (response.payload.data.searchTransactions && response.payload.data.searchTransactions.edges) {\n          responseData = response.payload.data.searchTransactions.edges;\n        }\n\n        dispatch(getWalletHistorySuccess(responseData));\n      }).catch(function (err) {\n        dispatch(getWalletHistoryFailure(err));\n      });\n    },\n    getWalletEthBalance: () => {\n      dispatch(getWalletEthBalance()).then(function (response) {\n        dispatch(getWalletEthBalanceSuccess(response.payload));\n      }).catch(function (err) {\n        dispatch(getWalletEthBalanceFailure());\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeView);","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/components/home/HomeViewContainer.js"],"names":["HomeView","listInvoices","listInvoicesSuccess","listInvoicesFailure","getWalletHistory","getWalletHistorySuccess","getWalletHistoryFailure","getUserInfo","getUserInfoSuccess","getUserInfoFailure","getWalletEthBalance","getWalletEthBalanceSuccess","getWalletEthBalanceFailure","connect","mapStateToProps","state","user","manager","mapDispatchToProps","dispatch","then","response","payload","status","data","catch","err","userInfoResponse","type","responseData","searchTransactions","edges"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,EAA4CC,mBAA5C,QAAuE,uBAAvE;AACA,SACEC,gBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,WAJF,EAKEC,kBALF,EAMEC,kBANF,EAOEC,mBAPF,EAQEC,0BARF,EASEC,0BATF,QAWK,oBAXL;AAaA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,YAAY,EAAE,MAAM;AAClBkB,MAAAA,QAAQ,CAAClB,YAAY,EAAb,CAAR,CAAyBmB,IAAzB,CAA8B,UAASC,QAAT,EAAmB;AAC/C,YAAIA,QAAQ,CAACC,OAAT,CAAiBC,MAAjB,KAA4B,GAAhC,EAAqC;AACnCJ,UAAAA,QAAQ,CAACjB,mBAAmB,CAACmB,QAAQ,CAACC,OAAT,CAAiBE,IAAlB,CAApB,CAAR;AACD;AACF,OAJD,EAIGC,KAJH,CAIS,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAAChB,mBAAmB,CAACuB,GAAD,CAApB,CAAR;AACD,OAND;AAOD,KATI;AAWLnB,IAAAA,WAAW,EAAE,YAAY;AACvBY,MAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR,CAAwBa,IAAxB,CAA6B,UAASO,gBAAT,EAA2B;AACtDR,QAAAA,QAAQ,CAACX,kBAAkB,CAACmB,gBAAgB,CAACL,OAAjB,CAAyBE,IAA1B,CAAnB,CAAR;AACD,OAFD,EAEGC,KAFH,CAES,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACV,kBAAkB,CAACiB,GAAD,CAAnB,CAAR;AACD,OAJD;AAKD,KAjBI;AAmBLtB,IAAAA,gBAAgB,EAAGwB,IAAD,IAAU;AAC1BT,MAAAA,QAAQ,CAACf,gBAAgB,CAACwB,IAAD,CAAjB,CAAR,CAAiCR,IAAjC,CAAsC,UAASC,QAAT,EAAmB;AACvD,YAAIQ,YAAY,GAAG,EAAnB;;AACA,YAAIR,QAAQ,CAACC,OAAT,CAAiBE,IAAjB,CAAsBM,kBAAtB,IAA4CT,QAAQ,CAACC,OAAT,CAAiBE,IAAjB,CAAsBM,kBAAtB,CAAyCC,KAAzF,EAAgG;AAC9FF,UAAAA,YAAY,GAAGR,QAAQ,CAACC,OAAT,CAAiBE,IAAjB,CAAsBM,kBAAtB,CAAyCC,KAAxD;AACD;;AACDZ,QAAAA,QAAQ,CAACd,uBAAuB,CAACwB,YAAD,CAAxB,CAAR;AACD,OAND,EAMGJ,KANH,CAMS,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACb,uBAAuB,CAACoB,GAAD,CAAxB,CAAR;AACD,OARD;AASD,KA7BI;AA+BLhB,IAAAA,mBAAmB,EAAE,MAAM;AACzBS,MAAAA,QAAQ,CAACT,mBAAmB,EAApB,CAAR,CAAgCU,IAAhC,CAAqC,UAASC,QAAT,EAAmB;AACtDF,QAAAA,QAAQ,CAACR,0BAA0B,CAACU,QAAQ,CAACC,OAAV,CAA3B,CAAR;AACD,OAFD,EAEGG,KAFH,CAES,UAASC,GAAT,EAAc;AACrBP,QAAAA,QAAQ,CAACP,0BAA0B,EAA3B,CAAR;AACD,OAJD;AAKD;AArCI,GAAP;AA0CD,CA3CD;;AA6CA,eAAeC,OAAO,CACpBC,eADoB,EAEpBI,kBAFoB,CAAP,CAGblB,QAHa,CAAf","sourcesContent":["import HomeView from './HomeView';\nimport { listInvoices, listInvoicesSuccess, listInvoicesFailure } from '../../actions/manager';\nimport {\n  getWalletHistory,\n  getWalletHistorySuccess,\n  getWalletHistoryFailure,\n  getUserInfo,\n  getUserInfoSuccess,\n  getUserInfoFailure,\n  getWalletEthBalance,\n  getWalletEthBalanceSuccess,\n  getWalletEthBalanceFailure\n}\nfrom '../../actions/user';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    manager: state.manager\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    listInvoices: () => {\n      dispatch(listInvoices()).then(function(response) {\n        if (response.payload.status === 200) {\n          dispatch(listInvoicesSuccess(response.payload.data));\n        }\n      }).catch(function(err) {\n        dispatch(listInvoicesFailure(err));\n      })\n    },\n\n    getUserInfo: async () => {\n      dispatch(getUserInfo()).then(function(userInfoResponse) {\n        dispatch(getUserInfoSuccess(userInfoResponse.payload.data));\n      }).catch(function(err) {\n        dispatch(getUserInfoFailure(err));\n      })\n    },\n\n    getWalletHistory: (type) => {\n      dispatch(getWalletHistory(type)).then(function(response) {\n        let responseData = [];\n        if (response.payload.data.searchTransactions && response.payload.data.searchTransactions.edges) {\n          responseData = response.payload.data.searchTransactions.edges;\n        }\n        dispatch(getWalletHistorySuccess(responseData));\n      }).catch(function(err) {\n        dispatch(getWalletHistoryFailure(err));\n      })\n    },\n\n    getWalletEthBalance: () => {\n      dispatch(getWalletEthBalance()).then(function(response) {\n        dispatch(getWalletEthBalanceSuccess(response.payload))\n      }).catch(function(err) {\n        dispatch(getWalletEthBalanceFailure());\n      })\n    }\n\n\n\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomeView);\n"]},"metadata":{},"sourceType":"module"}