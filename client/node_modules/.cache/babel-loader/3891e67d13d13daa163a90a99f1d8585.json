{"ast":null,"code":"const Web3 = require('web3');\n\nmodule.exports = {\n  getEthBalance: function () {\n    const web3 = window.web3;\n    const address = window.ethereum.selectedAddress;\n    return new Promise((resolve, reject) => {\n      if (!web3.utils) {\n        reject();\n      }\n\n      web3.eth.getBalance(address, function (error, wei) {\n        if (!error) {\n          var balance = web3.utils.fromWei(wei, 'ether');\n          resolve(balance);\n        } else {\n          reject(error);\n        }\n      });\n    });\n  },\n  makePaymentTransaction: function (transaction) {\n    const web3 = window.web3;\n    let val = transaction.amount * (100 - transaction.discount) / 100;\n    const amountString = web3.utils.toWei((transaction.amount * (100 - transaction.discount) / 100).toString());\n    const params = {\n      from: transaction.recipient_address,\n      to: transaction.sender_address,\n      value: amountString\n    };\n    return new Promise((resolve, reject) => {\n      web3.eth.sendTransaction(params, function (err, response) {\n        if (err) {\n          reject(err);\n        }\n\n        resolve(response);\n      });\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/utils/Web3Utils.js"],"names":["Web3","require","module","exports","getEthBalance","web3","window","address","ethereum","selectedAddress","Promise","resolve","reject","utils","eth","getBalance","error","wei","balance","fromWei","makePaymentTransaction","transaction","val","amount","discount","amountString","toWei","toString","params","from","recipient_address","to","sender_address","value","sendTransaction","err","response"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,aAAa,EAAE,YAAW;AACxB,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB;AACA,UAAME,OAAO,GAAGD,MAAM,CAACE,QAAP,CAAgBC,eAAhC;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI,CAACP,IAAI,CAACQ,KAAV,EAAiB;AACfD,QAAAA,MAAM;AACP;;AACDP,MAAAA,IAAI,CAACS,GAAL,CAASC,UAAT,CAAoBR,OAApB,EAA6B,UAASS,KAAT,EAAgBC,GAAhB,EAAqB;AAChD,YAAI,CAACD,KAAL,EAAY;AACV,cAAIE,OAAO,GAAGb,IAAI,CAACQ,KAAL,CAAWM,OAAX,CAAmBF,GAAnB,EAAwB,OAAxB,CAAd;AACAN,UAAAA,OAAO,CAACO,OAAD,CAAP;AACD,SAHD,MAIK;AACHN,UAAAA,MAAM,CAACI,KAAD,CAAN;AACD;AACF,OARD;AASD,KAbM,CAAP;AAcD,GAnBc;AAqBfI,EAAAA,sBAAsB,EAAE,UAASC,WAAT,EAAsB;AAC5C,UAAMhB,IAAI,GAAGC,MAAM,CAACD,IAApB;AACA,QAAIiB,GAAG,GAAID,WAAW,CAACE,MAAZ,IAAoB,MAAIF,WAAW,CAACG,QAApC,CAAD,GAAgD,GAA1D;AACA,UAAMC,YAAY,GAAGpB,IAAI,CAACQ,KAAL,CAAWa,KAAX,CAAiB,CAAEL,WAAW,CAACE,MAAZ,IAAoB,MAAIF,WAAW,CAACG,QAApC,CAAD,GAAgD,GAAjD,EAAsDG,QAAtD,EAAjB,CAArB;AAEA,UAAMC,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAER,WAAW,CAACS,iBADL;AAEbC,MAAAA,EAAE,EAAEV,WAAW,CAACW,cAFH;AAGbC,MAAAA,KAAK,EAAER;AAHM,KAAf;AAKA,WAAO,IAAIf,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCP,MAAAA,IAAI,CAACS,GAAL,CAASoB,eAAT,CAAyBN,MAAzB,EAAiC,UAASO,GAAT,EAAcC,QAAd,EAAwB;AACvD,YAAID,GAAJ,EAAS;AACPvB,UAAAA,MAAM,CAACuB,GAAD,CAAN;AACD;;AACDxB,QAAAA,OAAO,CAACyB,QAAD,CAAP;AACD,OALD;AAMD,KAPM,CAAP;AAQD;AAvCc,CAAjB","sourcesContent":["const Web3 = require('web3');\n\nmodule.exports = {\n  getEthBalance: function() {\n    const web3 = window.web3;\n    const address = window.ethereum.selectedAddress;\n\n    return new Promise((resolve, reject) => {\n      if (!web3.utils) {\n        reject();\n      }\n      web3.eth.getBalance(address, function(error, wei) {\n        if (!error) {\n          var balance = web3.utils.fromWei(wei, 'ether');\n          resolve(balance);\n        }\n        else {\n          reject(error);\n        }\n      });\n    })\n  },\n\n  makePaymentTransaction: function(transaction) {\n    const web3 = window.web3;\n    let val = (transaction.amount*(100-transaction.discount))/100\n    const amountString = web3.utils.toWei(((transaction.amount*(100-transaction.discount))/100).toString());\n\n    const params = {\n      from: transaction.recipient_address,\n      to: transaction.sender_address,\n      value: amountString,\n    };\n    return new Promise((resolve, reject) => {\n      web3.eth.sendTransaction(params, function(err, response) {\n        if (err) {\n          reject(err);\n        }\n        resolve(response);\n      })\n    });\n  },\n\n}\n"]},"metadata":{},"sourceType":"module"}