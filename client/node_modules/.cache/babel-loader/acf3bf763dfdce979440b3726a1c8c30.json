{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashs\\\\Desktop\\\\Computer Science\\\\Web Development\\\\Projects\\\\Hackethons\\\\EPIC TVS\\\\EZ Invoicing\\\\client\\\\src\\\\components\\\\manager\\\\InvoicesList.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nimport PayInvoice from './PayInvoice';\nimport * as moment from 'moment';\nconst ETHQ_ENDPOINT = process.env.REACT_APP_ETHQ_ENDPOINT;\nexport default class InvoicesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showDialog = () => {\n      this.setState({\n        dialogVisible: true\n      });\n    };\n\n    this.handleCloseDialog = () => {\n      this.setState({\n        dialogVisible: false\n      });\n    };\n\n    this.showInvoice = idx => {\n      console.log(idx);\n      this.setState({\n        data: this.props.invoices[idx]\n      });\n      this.setState({\n        dataItem: JSON.parse(this.props.invoices[idx].storeItem)\n      }); // console.log(this.props.invoices[idx].selectedInvoiceDate);\n\n      this.setState({\n        dialogVisible: true\n      });\n    };\n\n    this.state = {\n      dialogVisible: false,\n      data: [],\n      dataItem: []\n    };\n  }\n\n  payInvoice(transaction) {\n    this.props.payInvoice(transaction);\n  }\n\n  render() {\n    const {\n      dialogVisible,\n      data,\n      dataItem\n    } = this.state;\n    const {\n      invoices\n    } = this.props;\n    const self = this;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(PayInvoice, {\n      dialogVisible: dialogVisible,\n      handleCloseDialog: this.handleCloseDialog,\n      data: data,\n      dataItem: dataItem,\n      payInvoice: this.props.payInvoice,\n      toggle: this.props.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      className: \"manager-invoice-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      className: \"list-table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"From\"), React.createElement(Col, {\n      lg: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Invoice No.\"), React.createElement(Col, {\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(Col, {\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Due Date\"), React.createElement(Col, {\n      lg: 2,\n      className: \"transaction-detail-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Details\"), React.createElement(Col, {\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Col, {\n      lg: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, invoices.map((transaction, index) => {\n      if (this.props.toggle == 'paid') {\n        if (transaction.status == 'unpaid') return;\n      } else {\n        if (transaction.status == 'paid') return;\n      }\n\n      let dueDate;\n      if (this.props.toggle == 'paid') dueDate = moment(transaction.selectedInvoiceDate).format(\"YY-MM-DD HH:mm\");else dueDate = dueDate = moment(transaction.selectedFinanceDate).format(\"YY-MM-DD HH:mm\");\n      let actionButton = React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }); // if (transaction.status === 'paid') {\n      //   actionButton = \n      //   <a href={`${ETHQ_ENDPOINT}/tx/${transaction.transaction_hash}`} target=\"_blank\">\n      //   <Button className=\"manager-invoice-btn secondary-btn\">Reciept</Button>\n      //   </a>\n      // } else {\n      //    actionButton = <Button className=\"manager-invoice-btn\" onClick={self.payInvoice.bind(self, transaction)}>Pay</Button>\n      // }\n\n      actionButton = React.createElement(Button, {\n        className: \"manager-invoice-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"View\");\n      return React.createElement(ListGroupItem, {\n        className: \"transaction\",\n        key: `txn-${index}`,\n        onClick: () => this.showInvoice(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(TransactioniIdentifier, {\n        transaction: transaction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, transaction.invoiceNumber), React.createElement(Col, {\n        lg: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, transaction.amount * (100 - transaction.discount) / 100), React.createElement(Col, {\n        lg: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, dueDate), React.createElement(Col, {\n        lg: 2,\n        className: \"transaction-detail-cell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(TransactionDetails, {\n        transaction: transaction,\n        key: `description-key-${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, transaction.status), React.createElement(Col, {\n        lg: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, actionButton)));\n    }))));\n  }\n\n}\n\nclass TransactionDetails extends Component {\n  render() {\n    const {\n      transaction\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cell-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, transaction.label), React.createElement(\"div\", {\n      className: \"cell-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Label\"), React.createElement(\"div\", {\n      className: \"cell-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, transaction.description), React.createElement(\"div\", {\n      className: \"cell-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Description\"));\n  }\n\n}\n\nclass TransactioniIdentifier extends Component {\n  render() {\n    const {\n      transaction\n    } = this.props;\n    let senderAddress = transaction.sender_address ? transaction.sender_address.substr(0, 5) + \"....\" + transaction.sender_address.substr(transaction.sender_address.length - 6, transaction.sender_address.length - 1) : \"\";\n    let senderAddressLink = \"\";\n\n    if (senderAddress) {\n      senderAddressLink = React.createElement(\"a\", {\n        href: `${ETHQ_ENDPOINT}/search?q=(from:${transaction.sender_address}%20OR%20to:${transaction.sender_address})`,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, senderAddress);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, senderAddressLink));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/EZ Invoicing/client/src/components/manager/InvoicesList.js"],"names":["React","Component","Row","Col","ListGroup","ListGroupItem","Button","PayInvoice","moment","ETHQ_ENDPOINT","process","env","REACT_APP_ETHQ_ENDPOINT","InvoicesList","constructor","props","showDialog","setState","dialogVisible","handleCloseDialog","showInvoice","idx","console","log","data","invoices","dataItem","JSON","parse","storeItem","state","payInvoice","transaction","render","self","toggle","map","index","status","dueDate","selectedInvoiceDate","format","selectedFinanceDate","actionButton","invoiceNumber","amount","discount","TransactionDetails","label","description","TransactioniIdentifier","senderAddress","sender_address","substr","length","senderAddressLink"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nimport PayInvoice from './PayInvoice';\nimport * as moment from 'moment';\nconst ETHQ_ENDPOINT = process.env.REACT_APP_ETHQ_ENDPOINT;\n\nexport default class InvoicesList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {dialogVisible: false, data: [], dataItem: []};\n  }\n  payInvoice(transaction) {\n    this.props.payInvoice(transaction);\n  }\n  showDialog = () => {\n    this.setState({ dialogVisible: true });\n  }\n\n  handleCloseDialog = () => {\n    this.setState({ dialogVisible: false });\n  }\n  showInvoice = (idx) =>{\n    console.log(idx);\n    this.setState({data: this.props.invoices[idx]});\n    this.setState({dataItem: JSON.parse(this.props.invoices[idx].storeItem)});\n    // console.log(this.props.invoices[idx].selectedInvoiceDate);\n    this.setState({dialogVisible: true});\n  }\n  render() {\n    const { dialogVisible, data, dataItem} = this.state;\n    const { invoices } = this.props;\n    const self = this;\n\n    return (\n      <div>\n        <PayInvoice dialogVisible={dialogVisible} handleCloseDialog={this.handleCloseDialog} data={data} dataItem={dataItem} payInvoice={this.props.payInvoice} toggle={this.props.toggle}/>\n       <ListGroup className=\"manager-invoice-list\">\n        <ListGroupItem className=\"list-table-header\">\n          <Row>\n            <Col lg={1}>\n              From\n            </Col>\n            <Col lg={3}>\n              Invoice No.\n            </Col>\n            <Col lg={1}>\n              Amount\n            </Col>\n            <Col lg={2}>\n              Due Date\n            </Col>\n            <Col lg={2} className=\"transaction-detail-header\">\n              Details\n            </Col>\n            <Col lg={1}>\n              Status\n            </Col>\n            <Col lg={1}>\n              Action\n            </Col>\n          </Row>\n        </ListGroupItem>\n              <div>\n          {\n          invoices.map((transaction, index) => {\n            if(this.props.toggle=='paid'){\n              if(transaction.status=='unpaid') return;\n            }\n            else{\n              if(transaction.status=='paid') return;\n            }\n            let dueDate;\n            if(this.props.toggle=='paid') dueDate = moment(transaction.selectedInvoiceDate).format(\"YY-MM-DD HH:mm\");\n            else dueDate = dueDate = moment(transaction.selectedFinanceDate).format(\"YY-MM-DD HH:mm\");\n          let actionButton = <span/>;\n          // if (transaction.status === 'paid') {\n          //   actionButton = \n          //   <a href={`${ETHQ_ENDPOINT}/tx/${transaction.transaction_hash}`} target=\"_blank\">\n          //   <Button className=\"manager-invoice-btn secondary-btn\">Reciept</Button>\n          //   </a>\n          // } else {\n          //    actionButton = <Button className=\"manager-invoice-btn\" onClick={self.payInvoice.bind(self, transaction)}>Pay</Button>\n          // }\n          actionButton = <Button className=\"manager-invoice-btn\">View</Button>;\n         return <ListGroupItem className='transaction' key={`txn-${index}`} onClick={()=>this.showInvoice(index)}>    \n              <Row>\n\n                <Col lg={1}>\n                <TransactioniIdentifier transaction={transaction}/>\n                </Col>\n                <Col lg={3}>\n                {transaction.invoiceNumber}\n                </Col>\n                <Col lg={1}>\n                {((transaction.amount*(100-transaction.discount))/100)}\n                </Col>\n                <Col lg={2}>\n                {dueDate}\n                </Col>\n                <Col lg={2} className=\"transaction-detail-cell\">\n                  <TransactionDetails transaction={transaction} key={`description-key-${index}`}/>\n                </Col>\n                <Col lg={1}>\n                {transaction.status}\n                </Col>\n                <Col lg={1}>\n                  {actionButton}\n                </Col>\n              </Row>\n          </ListGroupItem>    \n              })}\n      \n      </div>\n      </ListGroup>     \n      </div>\n    )\n  }\n}\n\nclass TransactionDetails extends Component {\n  render() {\n    \n    const { transaction } = this.props;\n    return (\n      \n      <div>\n        \n        <div className=\"cell-data\">\n          {transaction.label}\n        </div>\n        <div className=\"cell-label\">\n          Label\n        </div>\n        <div className=\"cell-data\">\n          {transaction.description}\n        </div>\n        <div className=\"cell-label\">\n          Description\n        </div>\n      </div>\n    )\n  }\n}\n\nclass TransactioniIdentifier extends Component {\n  render() {\n    const { transaction } = this.props;\n    let senderAddress = transaction.sender_address ?\n      transaction.sender_address.substr(0, 5) + \"....\" + transaction.sender_address.substr(transaction.sender_address.length - 6, transaction.sender_address.length - 1) :\n      \"\";\n    let senderAddressLink = \"\";\n    if (senderAddress) {\n      senderAddressLink = <a href={`${ETHQ_ENDPOINT}/search?q=(from:${transaction.sender_address}%20OR%20to:${transaction.sender_address})`} target=\"_blank\">{senderAddress}</a>;\n    }\n\n    return (\n      <div>\n        <div>\n          {senderAddressLink}\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}