{"ast":null,"code":"import { SUBMIT_INVOICE, SUBMIT_INVOICE_SUCCESS, SUBMIT_INVOICE_FAILURE, GET_WALLET_HISTORY, GET_WALLET_HISTORY_SUCCESS, GET_WALLET_HISTORY_FAILURE, GET_PREVIOUS_INVOICES, GET_PREVIOUS_INVOICES_FAILURE, GET_PREVIOUS_INVOICES_SUCCESS, GET_USER_INFO, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAILURE, GET_WALLET_ETH_BALANCE, GET_WALLET_ETH_BALANCE_SUCCESS, GET_WALLET_ETH_BALANCE_FAILURE } from '../actions/user';\nconst initialState = {\n  createInvoice: {},\n  walletHistory: [],\n  previousInvoices: [],\n  isFetching: false,\n  error: false,\n  success: false,\n  userInfo: [],\n  balance: ''\n};\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case SUBMIT_INVOICE:\n      return { ...state\n      };\n\n    case GET_WALLET_HISTORY:\n      return { ...state,\n        walletHistory: []\n      };\n\n    case GET_WALLET_HISTORY_SUCCESS:\n      return { ...state,\n        walletHistory: action.payload\n      };\n\n    case GET_WALLET_HISTORY_FAILURE:\n      return { ...state\n      };\n\n    case GET_PREVIOUS_INVOICES:\n      return { ...state\n      };\n\n    case GET_PREVIOUS_INVOICES_SUCCESS:\n      return { ...state,\n        previousInvoices: action.payload.data\n      };\n\n    case GET_PREVIOUS_INVOICES_FAILURE:\n      return { ...state\n      };\n\n    case GET_USER_INFO:\n      return { ...state\n      };\n\n    case GET_USER_INFO_SUCCESS:\n      return { ...state,\n        userInfo: action.payload.data\n      };\n\n    case GET_USER_INFO_FAILURE:\n      return { ...state\n      };\n\n    case GET_WALLET_ETH_BALANCE_SUCCESS:\n      return { ...state,\n        balance: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/yashs/Desktop/Computer Science/Web Development/Projects/Hackethons/EPIC TVS/Streamworks-master/client/src/reducers/user.js"],"names":["SUBMIT_INVOICE","SUBMIT_INVOICE_SUCCESS","SUBMIT_INVOICE_FAILURE","GET_WALLET_HISTORY","GET_WALLET_HISTORY_SUCCESS","GET_WALLET_HISTORY_FAILURE","GET_PREVIOUS_INVOICES","GET_PREVIOUS_INVOICES_FAILURE","GET_PREVIOUS_INVOICES_SUCCESS","GET_USER_INFO","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILURE","GET_WALLET_ETH_BALANCE","GET_WALLET_ETH_BALANCE_SUCCESS","GET_WALLET_ETH_BALANCE_FAILURE","initialState","createInvoice","walletHistory","previousInvoices","isFetching","error","success","userInfo","balance","userReducer","state","action","type","payload","data"],"mappings":"AAAA,SACEA,cADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,kBAJF,EAKEC,0BALF,EAMEC,0BANF,EAOEC,qBAPF,EAQEC,6BARF,EASEC,6BATF,EAUEC,aAVF,EAWEC,qBAXF,EAYEC,qBAZF,EAaEC,sBAbF,EAcEC,8BAdF,EAeEC,8BAfF,QAiBK,iBAjBL;AAmBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,EADI;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,gBAAgB,EAAE,EAHC;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,KAAK,EAAE,KALY;AAMnBC,EAAAA,OAAO,EAAE,KANU;AAOnBC,EAAAA,QAAQ,EAAE,EAPS;AAQnBC,EAAAA,OAAO,EAAE;AARU,CAArB;AAWA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGV,YAA7B,EAA2CW,MAA3C,EAAmD;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK3B,cAAL;AACE,aAAO,EAAE,GAAGyB;AAAL,OAAP;;AACF,SAAKtB,kBAAL;AACE,aAAO,EAAE,GAAGsB,KAAL;AAAYR,QAAAA,aAAa,EAAE;AAA3B,OAAP;;AACF,SAAKb,0BAAL;AACE,aAAO,EAAE,GAAGqB,KAAL;AAAYR,QAAAA,aAAa,EAAES,MAAM,CAACE;AAAlC,OAAP;;AACF,SAAKvB,0BAAL;AACE,aAAO,EAAE,GAAGoB;AAAL,OAAP;;AACF,SAAKnB,qBAAL;AACE,aAAO,EAAE,GAAGmB;AAAL,OAAP;;AACF,SAAKjB,6BAAL;AACE,aAAO,EAAE,GAAGiB,KAAL;AAAYP,QAAAA,gBAAgB,EAAEQ,MAAM,CAACE,OAAP,CAAeC;AAA7C,OAAP;;AACF,SAAKtB,6BAAL;AACE,aAAO,EAAE,GAAGkB;AAAL,OAAP;;AACF,SAAKhB,aAAL;AACE,aAAO,EAAE,GAAGgB;AAAL,OAAP;;AACF,SAAKf,qBAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeC;AAArC,OAAP;;AACF,SAAKlB,qBAAL;AACE,aAAO,EAAE,GAAGc;AAAL,OAAP;;AACF,SAAKZ,8BAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAA5B,OAAP;;AACF;AACE,aAAOH,KAAP;AAxBJ;AA0BD","sourcesContent":["import {\n  SUBMIT_INVOICE,\n  SUBMIT_INVOICE_SUCCESS,\n  SUBMIT_INVOICE_FAILURE,\n  GET_WALLET_HISTORY,\n  GET_WALLET_HISTORY_SUCCESS,\n  GET_WALLET_HISTORY_FAILURE,\n  GET_PREVIOUS_INVOICES,\n  GET_PREVIOUS_INVOICES_FAILURE,\n  GET_PREVIOUS_INVOICES_SUCCESS,\n  GET_USER_INFO,\n  GET_USER_INFO_SUCCESS,\n  GET_USER_INFO_FAILURE,\n  GET_WALLET_ETH_BALANCE,\n  GET_WALLET_ETH_BALANCE_SUCCESS,\n  GET_WALLET_ETH_BALANCE_FAILURE,\n}\nfrom '../actions/user';\n\nconst initialState = {\n  createInvoice: {},\n  walletHistory: [],\n  previousInvoices: [],\n  isFetching: false,\n  error: false,\n  success: false,\n  userInfo: [],\n  balance: '',\n}\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case SUBMIT_INVOICE:\n      return { ...state }\n    case GET_WALLET_HISTORY:\n      return { ...state, walletHistory: [] }\n    case GET_WALLET_HISTORY_SUCCESS:\n      return { ...state, walletHistory: action.payload }\n    case GET_WALLET_HISTORY_FAILURE:\n      return { ...state }\n    case GET_PREVIOUS_INVOICES:\n      return { ...state }\n    case GET_PREVIOUS_INVOICES_SUCCESS:\n      return { ...state, previousInvoices: action.payload.data }\n    case GET_PREVIOUS_INVOICES_FAILURE:\n      return { ...state }\n    case GET_USER_INFO:\n      return { ...state }\n    case GET_USER_INFO_SUCCESS:\n      return { ...state, userInfo: action.payload.data }\n    case GET_USER_INFO_FAILURE:\n      return { ...state }\n    case GET_WALLET_ETH_BALANCE_SUCCESS:\n      return { ...state, balance: action.payload }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}